
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.ts'
export type * from './prismaNamespace.ts'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Organization: 'Organization',
  OrgEmail: 'OrgEmail',
  OrgDomain: 'OrgDomain',
  OrgEmailUseTo: 'OrgEmailUseTo',
  User: 'User',
  Phone: 'Phone',
  Address: 'Address',
  UserSecret: 'UserSecret',
  Profile: 'Profile',
  Group: 'Group',
  Todo: 'Todo',
  UserTodoLink: 'UserTodoLink',
  Task: 'Task',
  UserTaskLink: 'UserTaskLink',
  Post: 'Post',
  Category: 'Category',
  Comment: 'Comment',
  File: 'File',
  UserFollower: 'UserFollower',
  PostLike: 'PostLike',
  Story: 'Story',
  Image: 'Image',
  ConfigParam: 'ConfigParam',
  AppEmailDomain: 'AppEmailDomain',
  RefreshToken: 'RefreshToken',
  ApiKey: 'ApiKey',
  Scope: 'Scope',
  Token: 'Token',
  AccountValidation: 'AccountValidation',
  ChangesTracking: 'ChangesTracking'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const OrganizationScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  name: 'name',
  description: 'description',
  address: 'address',
  emailITAdmin: 'emailITAdmin',
  webSite: 'webSite',
  mainOrgId: 'mainOrgId'
} as const

export type OrganizationScalarFieldEnum = (typeof OrganizationScalarFieldEnum)[keyof typeof OrganizationScalarFieldEnum]


export const OrgEmailScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  email: 'email',
  description: 'description',
  orgId: 'orgId'
} as const

export type OrgEmailScalarFieldEnum = (typeof OrgEmailScalarFieldEnum)[keyof typeof OrgEmailScalarFieldEnum]


export const OrgDomainScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  domainName: 'domainName',
  extension: 'extension',
  orgId: 'orgId'
} as const

export type OrgDomainScalarFieldEnum = (typeof OrgDomainScalarFieldEnum)[keyof typeof OrgDomainScalarFieldEnum]


export const OrgEmailUseToScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  useTo: 'useTo',
  isActiv: 'isActiv',
  emailOrgId: 'emailOrgId'
} as const

export type OrgEmailUseToScalarFieldEnum = (typeof OrgEmailUseToScalarFieldEnum)[keyof typeof OrgEmailUseToScalarFieldEnum]


export const UserScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  email: 'email',
  lastName: 'lastName',
  firstName: 'firstName',
  title: 'title',
  nickName: 'nickName',
  Gender: 'Gender',
  social: 'social',
  Language: 'Language',
  photoUrl: 'photoUrl',
  dateOfBirth: 'dateOfBirth',
  hasEmergencyContact: 'hasEmergencyContact',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  jobTitle: 'jobTitle',
  position: 'position',
  isValidated: 'isValidated',
  isSuspended: 'isSuspended',
  managerId: 'managerId',
  Roles: 'Roles',
  Permissions: 'Permissions',
  isTfaEnable: 'isTfaEnable',
  tfaSecret: 'tfaSecret',
  passWordFaker: 'passWordFaker'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const PhoneScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  countryCode: 'countryCode',
  number: 'number',
  extension: 'extension',
  phoneType: 'phoneType',
  isPrimary: 'isPrimary'
} as const

export type PhoneScalarFieldEnum = (typeof PhoneScalarFieldEnum)[keyof typeof PhoneScalarFieldEnum]


export const AddressScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  street: 'street',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  addressType: 'addressType',
  isPrimary: 'isPrimary'
} as const

export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


export const UserSecretScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  pwdHash: 'pwdHash',
  salt: 'salt',
  isAdmin: 'isAdmin'
} as const

export type UserSecretScalarFieldEnum = (typeof UserSecretScalarFieldEnum)[keyof typeof UserSecretScalarFieldEnum]


export const ProfileScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  orderProfile: 'orderProfile',
  bio: 'bio'
} as const

export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


export const GroupScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  orderGroup: 'orderGroup',
  name: 'name',
  description: 'description',
  isActiv: 'isActiv',
  orgId: 'orgId'
} as const

export type GroupScalarFieldEnum = (typeof GroupScalarFieldEnum)[keyof typeof GroupScalarFieldEnum]


export const TodoScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  isPublic: 'isPublic',
  ownerId: 'ownerId',
  orgId: 'orgId',
  orderTodo: 'orderTodo',
  title: 'title',
  content: 'content',
  todoState: 'todoState',
  mainTodoId: 'mainTodoId'
} as const

export type TodoScalarFieldEnum = (typeof TodoScalarFieldEnum)[keyof typeof TodoScalarFieldEnum]


export const UserTodoLinkScalarFieldEnum = {
  userId: 'userId',
  todoId: 'todoId',
  isAuthor: 'isAuthor',
  isAssigned: 'isAssigned',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  comment: 'comment'
} as const

export type UserTodoLinkScalarFieldEnum = (typeof UserTodoLinkScalarFieldEnum)[keyof typeof UserTodoLinkScalarFieldEnum]


export const TaskScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  isPublic: 'isPublic',
  ownerId: 'ownerId',
  orgId: 'orgId',
  orderTask: 'orderTask',
  title: 'title',
  content: 'content',
  taskState: 'taskState',
  mainTaskId: 'mainTaskId',
  todoId: 'todoId'
} as const

export type TaskScalarFieldEnum = (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum]


export const UserTaskLinkScalarFieldEnum = {
  userId: 'userId',
  taskId: 'taskId',
  isAuthor: 'isAuthor',
  isAssigned: 'isAssigned',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  comment: 'comment'
} as const

export type UserTaskLinkScalarFieldEnum = (typeof UserTaskLinkScalarFieldEnum)[keyof typeof UserTaskLinkScalarFieldEnum]


export const PostScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  isPublic: 'isPublic',
  ownerId: 'ownerId',
  orgId: 'orgId',
  orderPost: 'orderPost',
  title: 'title',
  content: 'content'
} as const

export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


export const CategoryScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  orderCategory: 'orderCategory',
  name: 'name'
} as const

export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


export const CommentScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  orderComment: 'orderComment',
  content: 'content',
  postId: 'postId',
  authorId: 'authorId'
} as const

export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


export const FileScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  filename: 'filename',
  originalName: 'originalName',
  mimeType: 'mimeType',
  fileSize: 'fileSize',
  extension: 'extension',
  encoding: 'encoding',
  storageType: 'storageType',
  storagePath: 'storagePath',
  storageUrl: 'storageUrl',
  bucketName: 'bucketName',
  storageName: 'storageName',
  binaryData: 'binaryData',
  category: 'category',
  tags: 'tags',
  description: 'description',
  version: 'version',
  checksum: 'checksum',
  isProcessed: 'isProcessed',
  processingStatus: 'processingStatus',
  virusScanStatus: 'virusScanStatus',
  ocrText: 'ocrText',
  isPublicDownload: 'isPublicDownload',
  downloadCount: 'downloadCount',
  lastAccessedAt: 'lastAccessedAt',
  expiresAt: 'expiresAt',
  isArchived: 'isArchived',
  name: 'name',
  type: 'type',
  data: 'data',
  size: 'size',
  ownerId: 'ownerId',
  uploadedById: 'uploadedById',
  associatedId: 'associatedId',
  associationType: 'associationType',
  orgId: 'orgId',
  postId: 'postId',
  storyId: 'storyId',
  profileUserId: 'profileUserId',
  commentId: 'commentId'
} as const

export type FileScalarFieldEnum = (typeof FileScalarFieldEnum)[keyof typeof FileScalarFieldEnum]


export const UserFollowerScalarFieldEnum = {
  user_id: 'user_id',
  follower_id: 'follower_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UserFollowerScalarFieldEnum = (typeof UserFollowerScalarFieldEnum)[keyof typeof UserFollowerScalarFieldEnum]


export const PostLikeScalarFieldEnum = {
  user_id: 'user_id',
  post_id: 'post_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PostLikeScalarFieldEnum = (typeof PostLikeScalarFieldEnum)[keyof typeof PostLikeScalarFieldEnum]


export const StoryScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  caption: 'caption',
  user_id: 'user_id'
} as const

export type StoryScalarFieldEnum = (typeof StoryScalarFieldEnum)[keyof typeof StoryScalarFieldEnum]


export const ImageScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  filename: 'filename',
  originalName: 'originalName',
  mimeType: 'mimeType',
  fileSize: 'fileSize',
  width: 'width',
  height: 'height',
  storageType: 'storageType',
  storagePath: 'storagePath',
  storageUrl: 'storageUrl',
  bucketName: 'bucketName',
  isProcessed: 'isProcessed',
  thumbnailUrl: 'thumbnailUrl',
  variants: 'variants',
  tags: 'tags',
  altText: 'altText',
  description: 'description',
  uploadedById: 'uploadedById',
  associatedId: 'associatedId',
  associationType: 'associationType',
  sequence: 'sequence',
  orgId: 'orgId',
  postId: 'postId',
  profileUserId: 'profileUserId',
  storyId: 'storyId'
} as const

export type ImageScalarFieldEnum = (typeof ImageScalarFieldEnum)[keyof typeof ImageScalarFieldEnum]


export const ConfigParamScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  name: 'name',
  value: 'value',
  utility: 'utility'
} as const

export type ConfigParamScalarFieldEnum = (typeof ConfigParamScalarFieldEnum)[keyof typeof ConfigParamScalarFieldEnum]


export const AppEmailDomainScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  domain: 'domain',
  allowed: 'allowed'
} as const

export type AppEmailDomainScalarFieldEnum = (typeof AppEmailDomainScalarFieldEnum)[keyof typeof AppEmailDomainScalarFieldEnum]


export const RefreshTokenScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  userId: 'userId',
  tokenId: 'tokenId'
} as const

export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


export const ApiKeyScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  key: 'key',
  uuid: 'uuid',
  userId: 'userId'
} as const

export type ApiKeyScalarFieldEnum = (typeof ApiKeyScalarFieldEnum)[keyof typeof ApiKeyScalarFieldEnum]


export const ScopeScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  scope: 'scope'
} as const

export type ScopeScalarFieldEnum = (typeof ScopeScalarFieldEnum)[keyof typeof ScopeScalarFieldEnum]


export const TokenScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  tokenId: 'tokenId',
  type: 'type',
  emailToken: 'emailToken',
  valid: 'valid',
  expiration: 'expiration',
  userId: 'userId'
} as const

export type TokenScalarFieldEnum = (typeof TokenScalarFieldEnum)[keyof typeof TokenScalarFieldEnum]


export const AccountValidationScalarFieldEnum = {
  id: 'id',
  numSeq: 'numSeq',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  isValidated: 'isValidated',
  emailToken: 'emailToken',
  timeStamp: 'timeStamp'
} as const

export type AccountValidationScalarFieldEnum = (typeof AccountValidationScalarFieldEnum)[keyof typeof AccountValidationScalarFieldEnum]


export const ChangesTrackingScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  published: 'published',
  isPublic: 'isPublic',
  isDeleted: 'isDeleted',
  isDeletedDT: 'isDeletedDT',
  doneAt: 'doneAt',
  modifiedById: 'modifiedById',
  modelName: 'modelName',
  recordId: 'recordId',
  operation: 'operation',
  newData: 'newData',
  oldData: 'oldData'
} as const

export type ChangesTrackingScalarFieldEnum = (typeof ChangesTrackingScalarFieldEnum)[keyof typeof ChangesTrackingScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const JsonNullValueInput = {
  JsonNull: JsonNull
} as const

export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

