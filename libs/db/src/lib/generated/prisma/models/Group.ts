
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Group` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Group
 * 
 */
export type GroupModel = runtime.Types.Result.DefaultSelection<Prisma.$GroupPayload>

export type AggregateGroup = {
  _count: GroupCountAggregateOutputType | null
  _avg: GroupAvgAggregateOutputType | null
  _sum: GroupSumAggregateOutputType | null
  _min: GroupMinAggregateOutputType | null
  _max: GroupMaxAggregateOutputType | null
}

export type GroupAvgAggregateOutputType = {
  id: number | null
  isDeleted: number | null
  orderGroup: number | null
}

export type GroupSumAggregateOutputType = {
  id: number | null
  isDeleted: number | null
  orderGroup: number | null
}

export type GroupMinAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  published: boolean | null
  isPublic: boolean | null
  isDeleted: number | null
  isDeletedDT: Date | null
  orderGroup: number | null
  name: string | null
  description: string | null
  isActiv: Date | null
  orgId: string | null
}

export type GroupMaxAggregateOutputType = {
  id: number | null
  createdAt: Date | null
  updatedAt: Date | null
  published: boolean | null
  isPublic: boolean | null
  isDeleted: number | null
  isDeletedDT: Date | null
  orderGroup: number | null
  name: string | null
  description: string | null
  isActiv: Date | null
  orgId: string | null
}

export type GroupCountAggregateOutputType = {
  id: number
  createdAt: number
  updatedAt: number
  published: number
  isPublic: number
  isDeleted: number
  isDeletedDT: number
  orderGroup: number
  name: number
  description: number
  isActiv: number
  orgId: number
  _all: number
}


export type GroupAvgAggregateInputType = {
  id?: true
  isDeleted?: true
  orderGroup?: true
}

export type GroupSumAggregateInputType = {
  id?: true
  isDeleted?: true
  orderGroup?: true
}

export type GroupMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isPublic?: true
  isDeleted?: true
  isDeletedDT?: true
  orderGroup?: true
  name?: true
  description?: true
  isActiv?: true
  orgId?: true
}

export type GroupMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isPublic?: true
  isDeleted?: true
  isDeletedDT?: true
  orderGroup?: true
  name?: true
  description?: true
  isActiv?: true
  orgId?: true
}

export type GroupCountAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isPublic?: true
  isDeleted?: true
  isDeletedDT?: true
  orderGroup?: true
  name?: true
  description?: true
  isActiv?: true
  orgId?: true
  _all?: true
}

export type GroupAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Group to aggregate.
   */
  where?: Prisma.GroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Groups to fetch.
   */
  orderBy?: Prisma.GroupOrderByWithRelationInput | Prisma.GroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.GroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Groups
  **/
  _count?: true | GroupCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: GroupAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: GroupSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: GroupMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: GroupMaxAggregateInputType
}

export type GetGroupAggregateType<T extends GroupAggregateArgs> = {
      [P in keyof T & keyof AggregateGroup]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateGroup[P]>
    : Prisma.GetScalarType<T[P], AggregateGroup[P]>
}




export type GroupGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GroupWhereInput
  orderBy?: Prisma.GroupOrderByWithAggregationInput | Prisma.GroupOrderByWithAggregationInput[]
  by: Prisma.GroupScalarFieldEnum[] | Prisma.GroupScalarFieldEnum
  having?: Prisma.GroupScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: GroupCountAggregateInputType | true
  _avg?: GroupAvgAggregateInputType
  _sum?: GroupSumAggregateInputType
  _min?: GroupMinAggregateInputType
  _max?: GroupMaxAggregateInputType
}

export type GroupGroupByOutputType = {
  id: number
  createdAt: Date
  updatedAt: Date
  published: boolean
  isPublic: boolean
  isDeleted: number
  isDeletedDT: Date | null
  orderGroup: number
  name: string
  description: string | null
  isActiv: Date | null
  orgId: string
  _count: GroupCountAggregateOutputType | null
  _avg: GroupAvgAggregateOutputType | null
  _sum: GroupSumAggregateOutputType | null
  _min: GroupMinAggregateOutputType | null
  _max: GroupMaxAggregateOutputType | null
}

type GetGroupGroupByPayload<T extends GroupGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<GroupGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof GroupGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], GroupGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], GroupGroupByOutputType[P]>
      }
    >
  >



export type GroupWhereInput = {
  AND?: Prisma.GroupWhereInput | Prisma.GroupWhereInput[]
  OR?: Prisma.GroupWhereInput[]
  NOT?: Prisma.GroupWhereInput | Prisma.GroupWhereInput[]
  id?: Prisma.IntFilter<"Group"> | number
  createdAt?: Prisma.DateTimeFilter<"Group"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Group"> | Date | string
  published?: Prisma.BoolFilter<"Group"> | boolean
  isPublic?: Prisma.BoolFilter<"Group"> | boolean
  isDeleted?: Prisma.IntFilter<"Group"> | number
  isDeletedDT?: Prisma.DateTimeNullableFilter<"Group"> | Date | string | null
  orderGroup?: Prisma.IntFilter<"Group"> | number
  name?: Prisma.StringFilter<"Group"> | string
  description?: Prisma.StringNullableFilter<"Group"> | string | null
  isActiv?: Prisma.DateTimeNullableFilter<"Group"> | Date | string | null
  orgId?: Prisma.StringFilter<"Group"> | string
  Users?: Prisma.UserListRelationFilter
  Tasks?: Prisma.TaskListRelationFilter
  Todos?: Prisma.TodoListRelationFilter
  Posts?: Prisma.PostListRelationFilter
  Files?: Prisma.FileListRelationFilter
  org?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
}

export type GroupOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrderInput | Prisma.SortOrder
  orderGroup?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  isActiv?: Prisma.SortOrderInput | Prisma.SortOrder
  orgId?: Prisma.SortOrder
  Users?: Prisma.UserOrderByRelationAggregateInput
  Tasks?: Prisma.TaskOrderByRelationAggregateInput
  Todos?: Prisma.TodoOrderByRelationAggregateInput
  Posts?: Prisma.PostOrderByRelationAggregateInput
  Files?: Prisma.FileOrderByRelationAggregateInput
  org?: Prisma.OrganizationOrderByWithRelationInput
}

export type GroupWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.GroupWhereInput | Prisma.GroupWhereInput[]
  OR?: Prisma.GroupWhereInput[]
  NOT?: Prisma.GroupWhereInput | Prisma.GroupWhereInput[]
  createdAt?: Prisma.DateTimeFilter<"Group"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Group"> | Date | string
  published?: Prisma.BoolFilter<"Group"> | boolean
  isPublic?: Prisma.BoolFilter<"Group"> | boolean
  isDeleted?: Prisma.IntFilter<"Group"> | number
  isDeletedDT?: Prisma.DateTimeNullableFilter<"Group"> | Date | string | null
  orderGroup?: Prisma.IntFilter<"Group"> | number
  name?: Prisma.StringFilter<"Group"> | string
  description?: Prisma.StringNullableFilter<"Group"> | string | null
  isActiv?: Prisma.DateTimeNullableFilter<"Group"> | Date | string | null
  orgId?: Prisma.StringFilter<"Group"> | string
  Users?: Prisma.UserListRelationFilter
  Tasks?: Prisma.TaskListRelationFilter
  Todos?: Prisma.TodoListRelationFilter
  Posts?: Prisma.PostListRelationFilter
  Files?: Prisma.FileListRelationFilter
  org?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
}, "id">

export type GroupOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrderInput | Prisma.SortOrder
  orderGroup?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  isActiv?: Prisma.SortOrderInput | Prisma.SortOrder
  orgId?: Prisma.SortOrder
  _count?: Prisma.GroupCountOrderByAggregateInput
  _avg?: Prisma.GroupAvgOrderByAggregateInput
  _max?: Prisma.GroupMaxOrderByAggregateInput
  _min?: Prisma.GroupMinOrderByAggregateInput
  _sum?: Prisma.GroupSumOrderByAggregateInput
}

export type GroupScalarWhereWithAggregatesInput = {
  AND?: Prisma.GroupScalarWhereWithAggregatesInput | Prisma.GroupScalarWhereWithAggregatesInput[]
  OR?: Prisma.GroupScalarWhereWithAggregatesInput[]
  NOT?: Prisma.GroupScalarWhereWithAggregatesInput | Prisma.GroupScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Group"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Group"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Group"> | Date | string
  published?: Prisma.BoolWithAggregatesFilter<"Group"> | boolean
  isPublic?: Prisma.BoolWithAggregatesFilter<"Group"> | boolean
  isDeleted?: Prisma.IntWithAggregatesFilter<"Group"> | number
  isDeletedDT?: Prisma.DateTimeNullableWithAggregatesFilter<"Group"> | Date | string | null
  orderGroup?: Prisma.IntWithAggregatesFilter<"Group"> | number
  name?: Prisma.StringWithAggregatesFilter<"Group"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Group"> | string | null
  isActiv?: Prisma.DateTimeNullableWithAggregatesFilter<"Group"> | Date | string | null
  orgId?: Prisma.StringWithAggregatesFilter<"Group"> | string
}

export type GroupCreateInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Users?: Prisma.UserCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileCreateNestedManyWithoutGroupsInput
  org: Prisma.OrganizationCreateNestedOneWithoutGroupsInput
}

export type GroupUncheckedCreateInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  orgId: string
  Users?: Prisma.UserUncheckedCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoUncheckedCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostUncheckedCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileUncheckedCreateNestedManyWithoutGroupsInput
}

export type GroupUpdateInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Users?: Prisma.UserUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUpdateManyWithoutGroupsNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  Users?: Prisma.UserUncheckedUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUncheckedUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUncheckedUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUncheckedUpdateManyWithoutGroupsNestedInput
}

export type GroupCreateManyInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  orgId: string
}

export type GroupUpdateManyMutationInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type GroupUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type GroupListRelationFilter = {
  every?: Prisma.GroupWhereInput
  some?: Prisma.GroupWhereInput
  none?: Prisma.GroupWhereInput
}

export type GroupOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type GroupCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  orderGroup?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  isActiv?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
}

export type GroupAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  orderGroup?: Prisma.SortOrder
}

export type GroupMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  orderGroup?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  isActiv?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
}

export type GroupMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  orderGroup?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  isActiv?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
}

export type GroupSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  orderGroup?: Prisma.SortOrder
}

export type GroupCreateNestedManyWithoutOrgInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutOrgInput, Prisma.GroupUncheckedCreateWithoutOrgInput> | Prisma.GroupCreateWithoutOrgInput[] | Prisma.GroupUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutOrgInput | Prisma.GroupCreateOrConnectWithoutOrgInput[]
  createMany?: Prisma.GroupCreateManyOrgInputEnvelope
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUncheckedCreateNestedManyWithoutOrgInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutOrgInput, Prisma.GroupUncheckedCreateWithoutOrgInput> | Prisma.GroupCreateWithoutOrgInput[] | Prisma.GroupUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutOrgInput | Prisma.GroupCreateOrConnectWithoutOrgInput[]
  createMany?: Prisma.GroupCreateManyOrgInputEnvelope
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUpdateManyWithoutOrgNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutOrgInput, Prisma.GroupUncheckedCreateWithoutOrgInput> | Prisma.GroupCreateWithoutOrgInput[] | Prisma.GroupUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutOrgInput | Prisma.GroupCreateOrConnectWithoutOrgInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutOrgInput | Prisma.GroupUpsertWithWhereUniqueWithoutOrgInput[]
  createMany?: Prisma.GroupCreateManyOrgInputEnvelope
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutOrgInput | Prisma.GroupUpdateWithWhereUniqueWithoutOrgInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutOrgInput | Prisma.GroupUpdateManyWithWhereWithoutOrgInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupUncheckedUpdateManyWithoutOrgNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutOrgInput, Prisma.GroupUncheckedCreateWithoutOrgInput> | Prisma.GroupCreateWithoutOrgInput[] | Prisma.GroupUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutOrgInput | Prisma.GroupCreateOrConnectWithoutOrgInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutOrgInput | Prisma.GroupUpsertWithWhereUniqueWithoutOrgInput[]
  createMany?: Prisma.GroupCreateManyOrgInputEnvelope
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutOrgInput | Prisma.GroupUpdateWithWhereUniqueWithoutOrgInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutOrgInput | Prisma.GroupUpdateManyWithWhereWithoutOrgInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutUsersInput, Prisma.GroupUncheckedCreateWithoutUsersInput> | Prisma.GroupCreateWithoutUsersInput[] | Prisma.GroupUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutUsersInput | Prisma.GroupCreateOrConnectWithoutUsersInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUncheckedCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutUsersInput, Prisma.GroupUncheckedCreateWithoutUsersInput> | Prisma.GroupCreateWithoutUsersInput[] | Prisma.GroupUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutUsersInput | Prisma.GroupCreateOrConnectWithoutUsersInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutUsersInput, Prisma.GroupUncheckedCreateWithoutUsersInput> | Prisma.GroupCreateWithoutUsersInput[] | Prisma.GroupUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutUsersInput | Prisma.GroupCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutUsersInput | Prisma.GroupUpsertWithWhereUniqueWithoutUsersInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutUsersInput | Prisma.GroupUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutUsersInput | Prisma.GroupUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupUncheckedUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutUsersInput, Prisma.GroupUncheckedCreateWithoutUsersInput> | Prisma.GroupCreateWithoutUsersInput[] | Prisma.GroupUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutUsersInput | Prisma.GroupCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutUsersInput | Prisma.GroupUpsertWithWhereUniqueWithoutUsersInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutUsersInput | Prisma.GroupUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutUsersInput | Prisma.GroupUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupCreateNestedManyWithoutTodosInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTodosInput, Prisma.GroupUncheckedCreateWithoutTodosInput> | Prisma.GroupCreateWithoutTodosInput[] | Prisma.GroupUncheckedCreateWithoutTodosInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTodosInput | Prisma.GroupCreateOrConnectWithoutTodosInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUncheckedCreateNestedManyWithoutTodosInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTodosInput, Prisma.GroupUncheckedCreateWithoutTodosInput> | Prisma.GroupCreateWithoutTodosInput[] | Prisma.GroupUncheckedCreateWithoutTodosInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTodosInput | Prisma.GroupCreateOrConnectWithoutTodosInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUpdateManyWithoutTodosNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTodosInput, Prisma.GroupUncheckedCreateWithoutTodosInput> | Prisma.GroupCreateWithoutTodosInput[] | Prisma.GroupUncheckedCreateWithoutTodosInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTodosInput | Prisma.GroupCreateOrConnectWithoutTodosInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutTodosInput | Prisma.GroupUpsertWithWhereUniqueWithoutTodosInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutTodosInput | Prisma.GroupUpdateWithWhereUniqueWithoutTodosInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutTodosInput | Prisma.GroupUpdateManyWithWhereWithoutTodosInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupUncheckedUpdateManyWithoutTodosNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTodosInput, Prisma.GroupUncheckedCreateWithoutTodosInput> | Prisma.GroupCreateWithoutTodosInput[] | Prisma.GroupUncheckedCreateWithoutTodosInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTodosInput | Prisma.GroupCreateOrConnectWithoutTodosInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutTodosInput | Prisma.GroupUpsertWithWhereUniqueWithoutTodosInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutTodosInput | Prisma.GroupUpdateWithWhereUniqueWithoutTodosInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutTodosInput | Prisma.GroupUpdateManyWithWhereWithoutTodosInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupCreateNestedManyWithoutTasksInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTasksInput, Prisma.GroupUncheckedCreateWithoutTasksInput> | Prisma.GroupCreateWithoutTasksInput[] | Prisma.GroupUncheckedCreateWithoutTasksInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTasksInput | Prisma.GroupCreateOrConnectWithoutTasksInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUncheckedCreateNestedManyWithoutTasksInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTasksInput, Prisma.GroupUncheckedCreateWithoutTasksInput> | Prisma.GroupCreateWithoutTasksInput[] | Prisma.GroupUncheckedCreateWithoutTasksInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTasksInput | Prisma.GroupCreateOrConnectWithoutTasksInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUpdateManyWithoutTasksNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTasksInput, Prisma.GroupUncheckedCreateWithoutTasksInput> | Prisma.GroupCreateWithoutTasksInput[] | Prisma.GroupUncheckedCreateWithoutTasksInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTasksInput | Prisma.GroupCreateOrConnectWithoutTasksInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutTasksInput | Prisma.GroupUpsertWithWhereUniqueWithoutTasksInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutTasksInput | Prisma.GroupUpdateWithWhereUniqueWithoutTasksInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutTasksInput | Prisma.GroupUpdateManyWithWhereWithoutTasksInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupUncheckedUpdateManyWithoutTasksNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutTasksInput, Prisma.GroupUncheckedCreateWithoutTasksInput> | Prisma.GroupCreateWithoutTasksInput[] | Prisma.GroupUncheckedCreateWithoutTasksInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutTasksInput | Prisma.GroupCreateOrConnectWithoutTasksInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutTasksInput | Prisma.GroupUpsertWithWhereUniqueWithoutTasksInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutTasksInput | Prisma.GroupUpdateWithWhereUniqueWithoutTasksInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutTasksInput | Prisma.GroupUpdateManyWithWhereWithoutTasksInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupCreateNestedManyWithoutPostsInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutPostsInput, Prisma.GroupUncheckedCreateWithoutPostsInput> | Prisma.GroupCreateWithoutPostsInput[] | Prisma.GroupUncheckedCreateWithoutPostsInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutPostsInput | Prisma.GroupCreateOrConnectWithoutPostsInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUncheckedCreateNestedManyWithoutPostsInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutPostsInput, Prisma.GroupUncheckedCreateWithoutPostsInput> | Prisma.GroupCreateWithoutPostsInput[] | Prisma.GroupUncheckedCreateWithoutPostsInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutPostsInput | Prisma.GroupCreateOrConnectWithoutPostsInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUpdateManyWithoutPostsNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutPostsInput, Prisma.GroupUncheckedCreateWithoutPostsInput> | Prisma.GroupCreateWithoutPostsInput[] | Prisma.GroupUncheckedCreateWithoutPostsInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutPostsInput | Prisma.GroupCreateOrConnectWithoutPostsInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutPostsInput | Prisma.GroupUpsertWithWhereUniqueWithoutPostsInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutPostsInput | Prisma.GroupUpdateWithWhereUniqueWithoutPostsInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutPostsInput | Prisma.GroupUpdateManyWithWhereWithoutPostsInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupUncheckedUpdateManyWithoutPostsNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutPostsInput, Prisma.GroupUncheckedCreateWithoutPostsInput> | Prisma.GroupCreateWithoutPostsInput[] | Prisma.GroupUncheckedCreateWithoutPostsInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutPostsInput | Prisma.GroupCreateOrConnectWithoutPostsInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutPostsInput | Prisma.GroupUpsertWithWhereUniqueWithoutPostsInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutPostsInput | Prisma.GroupUpdateWithWhereUniqueWithoutPostsInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutPostsInput | Prisma.GroupUpdateManyWithWhereWithoutPostsInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupCreateNestedManyWithoutFilesInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutFilesInput, Prisma.GroupUncheckedCreateWithoutFilesInput> | Prisma.GroupCreateWithoutFilesInput[] | Prisma.GroupUncheckedCreateWithoutFilesInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutFilesInput | Prisma.GroupCreateOrConnectWithoutFilesInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUncheckedCreateNestedManyWithoutFilesInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutFilesInput, Prisma.GroupUncheckedCreateWithoutFilesInput> | Prisma.GroupCreateWithoutFilesInput[] | Prisma.GroupUncheckedCreateWithoutFilesInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutFilesInput | Prisma.GroupCreateOrConnectWithoutFilesInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
}

export type GroupUpdateManyWithoutFilesNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutFilesInput, Prisma.GroupUncheckedCreateWithoutFilesInput> | Prisma.GroupCreateWithoutFilesInput[] | Prisma.GroupUncheckedCreateWithoutFilesInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutFilesInput | Prisma.GroupCreateOrConnectWithoutFilesInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutFilesInput | Prisma.GroupUpsertWithWhereUniqueWithoutFilesInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutFilesInput | Prisma.GroupUpdateWithWhereUniqueWithoutFilesInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutFilesInput | Prisma.GroupUpdateManyWithWhereWithoutFilesInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupUncheckedUpdateManyWithoutFilesNestedInput = {
  create?: Prisma.XOR<Prisma.GroupCreateWithoutFilesInput, Prisma.GroupUncheckedCreateWithoutFilesInput> | Prisma.GroupCreateWithoutFilesInput[] | Prisma.GroupUncheckedCreateWithoutFilesInput[]
  connectOrCreate?: Prisma.GroupCreateOrConnectWithoutFilesInput | Prisma.GroupCreateOrConnectWithoutFilesInput[]
  upsert?: Prisma.GroupUpsertWithWhereUniqueWithoutFilesInput | Prisma.GroupUpsertWithWhereUniqueWithoutFilesInput[]
  set?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  disconnect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  delete?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  connect?: Prisma.GroupWhereUniqueInput | Prisma.GroupWhereUniqueInput[]
  update?: Prisma.GroupUpdateWithWhereUniqueWithoutFilesInput | Prisma.GroupUpdateWithWhereUniqueWithoutFilesInput[]
  updateMany?: Prisma.GroupUpdateManyWithWhereWithoutFilesInput | Prisma.GroupUpdateManyWithWhereWithoutFilesInput[]
  deleteMany?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
}

export type GroupCreateWithoutOrgInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Users?: Prisma.UserCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileCreateNestedManyWithoutGroupsInput
}

export type GroupUncheckedCreateWithoutOrgInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Users?: Prisma.UserUncheckedCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoUncheckedCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostUncheckedCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileUncheckedCreateNestedManyWithoutGroupsInput
}

export type GroupCreateOrConnectWithoutOrgInput = {
  where: Prisma.GroupWhereUniqueInput
  create: Prisma.XOR<Prisma.GroupCreateWithoutOrgInput, Prisma.GroupUncheckedCreateWithoutOrgInput>
}

export type GroupCreateManyOrgInputEnvelope = {
  data: Prisma.GroupCreateManyOrgInput | Prisma.GroupCreateManyOrgInput[]
  skipDuplicates?: boolean
}

export type GroupUpsertWithWhereUniqueWithoutOrgInput = {
  where: Prisma.GroupWhereUniqueInput
  update: Prisma.XOR<Prisma.GroupUpdateWithoutOrgInput, Prisma.GroupUncheckedUpdateWithoutOrgInput>
  create: Prisma.XOR<Prisma.GroupCreateWithoutOrgInput, Prisma.GroupUncheckedCreateWithoutOrgInput>
}

export type GroupUpdateWithWhereUniqueWithoutOrgInput = {
  where: Prisma.GroupWhereUniqueInput
  data: Prisma.XOR<Prisma.GroupUpdateWithoutOrgInput, Prisma.GroupUncheckedUpdateWithoutOrgInput>
}

export type GroupUpdateManyWithWhereWithoutOrgInput = {
  where: Prisma.GroupScalarWhereInput
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyWithoutOrgInput>
}

export type GroupScalarWhereInput = {
  AND?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
  OR?: Prisma.GroupScalarWhereInput[]
  NOT?: Prisma.GroupScalarWhereInput | Prisma.GroupScalarWhereInput[]
  id?: Prisma.IntFilter<"Group"> | number
  createdAt?: Prisma.DateTimeFilter<"Group"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Group"> | Date | string
  published?: Prisma.BoolFilter<"Group"> | boolean
  isPublic?: Prisma.BoolFilter<"Group"> | boolean
  isDeleted?: Prisma.IntFilter<"Group"> | number
  isDeletedDT?: Prisma.DateTimeNullableFilter<"Group"> | Date | string | null
  orderGroup?: Prisma.IntFilter<"Group"> | number
  name?: Prisma.StringFilter<"Group"> | string
  description?: Prisma.StringNullableFilter<"Group"> | string | null
  isActiv?: Prisma.DateTimeNullableFilter<"Group"> | Date | string | null
  orgId?: Prisma.StringFilter<"Group"> | string
}

export type GroupCreateWithoutUsersInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Tasks?: Prisma.TaskCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileCreateNestedManyWithoutGroupsInput
  org: Prisma.OrganizationCreateNestedOneWithoutGroupsInput
}

export type GroupUncheckedCreateWithoutUsersInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  orgId: string
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoUncheckedCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostUncheckedCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileUncheckedCreateNestedManyWithoutGroupsInput
}

export type GroupCreateOrConnectWithoutUsersInput = {
  where: Prisma.GroupWhereUniqueInput
  create: Prisma.XOR<Prisma.GroupCreateWithoutUsersInput, Prisma.GroupUncheckedCreateWithoutUsersInput>
}

export type GroupUpsertWithWhereUniqueWithoutUsersInput = {
  where: Prisma.GroupWhereUniqueInput
  update: Prisma.XOR<Prisma.GroupUpdateWithoutUsersInput, Prisma.GroupUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.GroupCreateWithoutUsersInput, Prisma.GroupUncheckedCreateWithoutUsersInput>
}

export type GroupUpdateWithWhereUniqueWithoutUsersInput = {
  where: Prisma.GroupWhereUniqueInput
  data: Prisma.XOR<Prisma.GroupUpdateWithoutUsersInput, Prisma.GroupUncheckedUpdateWithoutUsersInput>
}

export type GroupUpdateManyWithWhereWithoutUsersInput = {
  where: Prisma.GroupScalarWhereInput
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyWithoutUsersInput>
}

export type GroupCreateWithoutTodosInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Users?: Prisma.UserCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileCreateNestedManyWithoutGroupsInput
  org: Prisma.OrganizationCreateNestedOneWithoutGroupsInput
}

export type GroupUncheckedCreateWithoutTodosInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  orgId: string
  Users?: Prisma.UserUncheckedCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostUncheckedCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileUncheckedCreateNestedManyWithoutGroupsInput
}

export type GroupCreateOrConnectWithoutTodosInput = {
  where: Prisma.GroupWhereUniqueInput
  create: Prisma.XOR<Prisma.GroupCreateWithoutTodosInput, Prisma.GroupUncheckedCreateWithoutTodosInput>
}

export type GroupUpsertWithWhereUniqueWithoutTodosInput = {
  where: Prisma.GroupWhereUniqueInput
  update: Prisma.XOR<Prisma.GroupUpdateWithoutTodosInput, Prisma.GroupUncheckedUpdateWithoutTodosInput>
  create: Prisma.XOR<Prisma.GroupCreateWithoutTodosInput, Prisma.GroupUncheckedCreateWithoutTodosInput>
}

export type GroupUpdateWithWhereUniqueWithoutTodosInput = {
  where: Prisma.GroupWhereUniqueInput
  data: Prisma.XOR<Prisma.GroupUpdateWithoutTodosInput, Prisma.GroupUncheckedUpdateWithoutTodosInput>
}

export type GroupUpdateManyWithWhereWithoutTodosInput = {
  where: Prisma.GroupScalarWhereInput
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyWithoutTodosInput>
}

export type GroupCreateWithoutTasksInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Users?: Prisma.UserCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileCreateNestedManyWithoutGroupsInput
  org: Prisma.OrganizationCreateNestedOneWithoutGroupsInput
}

export type GroupUncheckedCreateWithoutTasksInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  orgId: string
  Users?: Prisma.UserUncheckedCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoUncheckedCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostUncheckedCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileUncheckedCreateNestedManyWithoutGroupsInput
}

export type GroupCreateOrConnectWithoutTasksInput = {
  where: Prisma.GroupWhereUniqueInput
  create: Prisma.XOR<Prisma.GroupCreateWithoutTasksInput, Prisma.GroupUncheckedCreateWithoutTasksInput>
}

export type GroupUpsertWithWhereUniqueWithoutTasksInput = {
  where: Prisma.GroupWhereUniqueInput
  update: Prisma.XOR<Prisma.GroupUpdateWithoutTasksInput, Prisma.GroupUncheckedUpdateWithoutTasksInput>
  create: Prisma.XOR<Prisma.GroupCreateWithoutTasksInput, Prisma.GroupUncheckedCreateWithoutTasksInput>
}

export type GroupUpdateWithWhereUniqueWithoutTasksInput = {
  where: Prisma.GroupWhereUniqueInput
  data: Prisma.XOR<Prisma.GroupUpdateWithoutTasksInput, Prisma.GroupUncheckedUpdateWithoutTasksInput>
}

export type GroupUpdateManyWithWhereWithoutTasksInput = {
  where: Prisma.GroupScalarWhereInput
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyWithoutTasksInput>
}

export type GroupCreateWithoutPostsInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Users?: Prisma.UserCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileCreateNestedManyWithoutGroupsInput
  org: Prisma.OrganizationCreateNestedOneWithoutGroupsInput
}

export type GroupUncheckedCreateWithoutPostsInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  orgId: string
  Users?: Prisma.UserUncheckedCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoUncheckedCreateNestedManyWithoutGroupsInput
  Files?: Prisma.FileUncheckedCreateNestedManyWithoutGroupsInput
}

export type GroupCreateOrConnectWithoutPostsInput = {
  where: Prisma.GroupWhereUniqueInput
  create: Prisma.XOR<Prisma.GroupCreateWithoutPostsInput, Prisma.GroupUncheckedCreateWithoutPostsInput>
}

export type GroupUpsertWithWhereUniqueWithoutPostsInput = {
  where: Prisma.GroupWhereUniqueInput
  update: Prisma.XOR<Prisma.GroupUpdateWithoutPostsInput, Prisma.GroupUncheckedUpdateWithoutPostsInput>
  create: Prisma.XOR<Prisma.GroupCreateWithoutPostsInput, Prisma.GroupUncheckedCreateWithoutPostsInput>
}

export type GroupUpdateWithWhereUniqueWithoutPostsInput = {
  where: Prisma.GroupWhereUniqueInput
  data: Prisma.XOR<Prisma.GroupUpdateWithoutPostsInput, Prisma.GroupUncheckedUpdateWithoutPostsInput>
}

export type GroupUpdateManyWithWhereWithoutPostsInput = {
  where: Prisma.GroupScalarWhereInput
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyWithoutPostsInput>
}

export type GroupCreateWithoutFilesInput = {
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  Users?: Prisma.UserCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostCreateNestedManyWithoutGroupsInput
  org: Prisma.OrganizationCreateNestedOneWithoutGroupsInput
}

export type GroupUncheckedCreateWithoutFilesInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
  orgId: string
  Users?: Prisma.UserUncheckedCreateNestedManyWithoutGroupsInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutGroupsInput
  Todos?: Prisma.TodoUncheckedCreateNestedManyWithoutGroupsInput
  Posts?: Prisma.PostUncheckedCreateNestedManyWithoutGroupsInput
}

export type GroupCreateOrConnectWithoutFilesInput = {
  where: Prisma.GroupWhereUniqueInput
  create: Prisma.XOR<Prisma.GroupCreateWithoutFilesInput, Prisma.GroupUncheckedCreateWithoutFilesInput>
}

export type GroupUpsertWithWhereUniqueWithoutFilesInput = {
  where: Prisma.GroupWhereUniqueInput
  update: Prisma.XOR<Prisma.GroupUpdateWithoutFilesInput, Prisma.GroupUncheckedUpdateWithoutFilesInput>
  create: Prisma.XOR<Prisma.GroupCreateWithoutFilesInput, Prisma.GroupUncheckedCreateWithoutFilesInput>
}

export type GroupUpdateWithWhereUniqueWithoutFilesInput = {
  where: Prisma.GroupWhereUniqueInput
  data: Prisma.XOR<Prisma.GroupUpdateWithoutFilesInput, Prisma.GroupUncheckedUpdateWithoutFilesInput>
}

export type GroupUpdateManyWithWhereWithoutFilesInput = {
  where: Prisma.GroupScalarWhereInput
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyWithoutFilesInput>
}

export type GroupCreateManyOrgInput = {
  id?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isPublic?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  orderGroup: number
  name: string
  description?: string | null
  isActiv?: Date | string | null
}

export type GroupUpdateWithoutOrgInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Users?: Prisma.UserUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUpdateManyWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateWithoutOrgInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Users?: Prisma.UserUncheckedUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUncheckedUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUncheckedUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUncheckedUpdateManyWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateManyWithoutOrgInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type GroupUpdateWithoutUsersInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Tasks?: Prisma.TaskUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUpdateManyWithoutGroupsNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateWithoutUsersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUncheckedUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUncheckedUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUncheckedUpdateManyWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateManyWithoutUsersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type GroupUpdateWithoutTodosInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Users?: Prisma.UserUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUpdateManyWithoutGroupsNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateWithoutTodosInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  Users?: Prisma.UserUncheckedUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUncheckedUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUncheckedUpdateManyWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateManyWithoutTodosInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type GroupUpdateWithoutTasksInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Users?: Prisma.UserUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUpdateManyWithoutGroupsNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateWithoutTasksInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  Users?: Prisma.UserUncheckedUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUncheckedUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUncheckedUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUncheckedUpdateManyWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateManyWithoutTasksInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type GroupUpdateWithoutPostsInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Users?: Prisma.UserUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUpdateManyWithoutGroupsNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateWithoutPostsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  Users?: Prisma.UserUncheckedUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUncheckedUpdateManyWithoutGroupsNestedInput
  Files?: Prisma.FileUncheckedUpdateManyWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateManyWithoutPostsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type GroupUpdateWithoutFilesInput = {
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Users?: Prisma.UserUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUpdateManyWithoutGroupsNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateWithoutFilesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  Users?: Prisma.UserUncheckedUpdateManyWithoutGroupsNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutGroupsNestedInput
  Todos?: Prisma.TodoUncheckedUpdateManyWithoutGroupsNestedInput
  Posts?: Prisma.PostUncheckedUpdateManyWithoutGroupsNestedInput
}

export type GroupUncheckedUpdateManyWithoutFilesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orderGroup?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActiv?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type GroupCountOutputType
 */

export type GroupCountOutputType = {
  Users: number
  Tasks: number
  Todos: number
  Posts: number
  Files: number
}

export type GroupCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Users?: boolean | GroupCountOutputTypeCountUsersArgs
  Tasks?: boolean | GroupCountOutputTypeCountTasksArgs
  Todos?: boolean | GroupCountOutputTypeCountTodosArgs
  Posts?: boolean | GroupCountOutputTypeCountPostsArgs
  Files?: boolean | GroupCountOutputTypeCountFilesArgs
}

/**
 * GroupCountOutputType without action
 */
export type GroupCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GroupCountOutputType
   */
  select?: Prisma.GroupCountOutputTypeSelect<ExtArgs> | null
}

/**
 * GroupCountOutputType without action
 */
export type GroupCountOutputTypeCountUsersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
}

/**
 * GroupCountOutputType without action
 */
export type GroupCountOutputTypeCountTasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TaskWhereInput
}

/**
 * GroupCountOutputType without action
 */
export type GroupCountOutputTypeCountTodosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TodoWhereInput
}

/**
 * GroupCountOutputType without action
 */
export type GroupCountOutputTypeCountPostsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostWhereInput
}

/**
 * GroupCountOutputType without action
 */
export type GroupCountOutputTypeCountFilesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FileWhereInput
}


export type GroupSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  orderGroup?: boolean
  name?: boolean
  description?: boolean
  isActiv?: boolean
  orgId?: boolean
  Users?: boolean | Prisma.Group$UsersArgs<ExtArgs>
  Tasks?: boolean | Prisma.Group$TasksArgs<ExtArgs>
  Todos?: boolean | Prisma.Group$TodosArgs<ExtArgs>
  Posts?: boolean | Prisma.Group$PostsArgs<ExtArgs>
  Files?: boolean | Prisma.Group$FilesArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.GroupCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["group"]>

export type GroupSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  orderGroup?: boolean
  name?: boolean
  description?: boolean
  isActiv?: boolean
  orgId?: boolean
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["group"]>

export type GroupSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  orderGroup?: boolean
  name?: boolean
  description?: boolean
  isActiv?: boolean
  orgId?: boolean
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["group"]>

export type GroupSelectScalar = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  orderGroup?: boolean
  name?: boolean
  description?: boolean
  isActiv?: boolean
  orgId?: boolean
}

export type GroupOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "published" | "isPublic" | "isDeleted" | "isDeletedDT" | "orderGroup" | "name" | "description" | "isActiv" | "orgId", ExtArgs["result"]["group"]>
export type GroupInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Users?: boolean | Prisma.Group$UsersArgs<ExtArgs>
  Tasks?: boolean | Prisma.Group$TasksArgs<ExtArgs>
  Todos?: boolean | Prisma.Group$TodosArgs<ExtArgs>
  Posts?: boolean | Prisma.Group$PostsArgs<ExtArgs>
  Files?: boolean | Prisma.Group$FilesArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.GroupCountOutputTypeDefaultArgs<ExtArgs>
}
export type GroupIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}
export type GroupIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}

export type $GroupPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Group"
  objects: {
    Users: Prisma.$UserPayload<ExtArgs>[]
    Tasks: Prisma.$TaskPayload<ExtArgs>[]
    Todos: Prisma.$TodoPayload<ExtArgs>[]
    Posts: Prisma.$PostPayload<ExtArgs>[]
    Files: Prisma.$FilePayload<ExtArgs>[]
    org: Prisma.$OrganizationPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    createdAt: Date
    updatedAt: Date
    published: boolean
    isPublic: boolean
    isDeleted: number
    isDeletedDT: Date | null
    orderGroup: number
    name: string
    description: string | null
    isActiv: Date | null
    orgId: string
  }, ExtArgs["result"]["group"]>
  composites: {}
}

export type GroupGetPayload<S extends boolean | null | undefined | GroupDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$GroupPayload, S>

export type GroupCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<GroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: GroupCountAggregateInputType | true
  }

export interface GroupDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Group'], meta: { name: 'Group' } }
  /**
   * Find zero or one Group that matches the filter.
   * @param {GroupFindUniqueArgs} args - Arguments to find a Group
   * @example
   * // Get one Group
   * const group = await prisma.group.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends GroupFindUniqueArgs>(args: Prisma.SelectSubset<T, GroupFindUniqueArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Group that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {GroupFindUniqueOrThrowArgs} args - Arguments to find a Group
   * @example
   * // Get one Group
   * const group = await prisma.group.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends GroupFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, GroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Group that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GroupFindFirstArgs} args - Arguments to find a Group
   * @example
   * // Get one Group
   * const group = await prisma.group.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends GroupFindFirstArgs>(args?: Prisma.SelectSubset<T, GroupFindFirstArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Group that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GroupFindFirstOrThrowArgs} args - Arguments to find a Group
   * @example
   * // Get one Group
   * const group = await prisma.group.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends GroupFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, GroupFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Groups that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GroupFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Groups
   * const groups = await prisma.group.findMany()
   * 
   * // Get first 10 Groups
   * const groups = await prisma.group.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const groupWithIdOnly = await prisma.group.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends GroupFindManyArgs>(args?: Prisma.SelectSubset<T, GroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Group.
   * @param {GroupCreateArgs} args - Arguments to create a Group.
   * @example
   * // Create one Group
   * const Group = await prisma.group.create({
   *   data: {
   *     // ... data to create a Group
   *   }
   * })
   * 
   */
  create<T extends GroupCreateArgs>(args: Prisma.SelectSubset<T, GroupCreateArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Groups.
   * @param {GroupCreateManyArgs} args - Arguments to create many Groups.
   * @example
   * // Create many Groups
   * const group = await prisma.group.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends GroupCreateManyArgs>(args?: Prisma.SelectSubset<T, GroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Groups and returns the data saved in the database.
   * @param {GroupCreateManyAndReturnArgs} args - Arguments to create many Groups.
   * @example
   * // Create many Groups
   * const group = await prisma.group.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Groups and only return the `id`
   * const groupWithIdOnly = await prisma.group.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends GroupCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, GroupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Group.
   * @param {GroupDeleteArgs} args - Arguments to delete one Group.
   * @example
   * // Delete one Group
   * const Group = await prisma.group.delete({
   *   where: {
   *     // ... filter to delete one Group
   *   }
   * })
   * 
   */
  delete<T extends GroupDeleteArgs>(args: Prisma.SelectSubset<T, GroupDeleteArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Group.
   * @param {GroupUpdateArgs} args - Arguments to update one Group.
   * @example
   * // Update one Group
   * const group = await prisma.group.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends GroupUpdateArgs>(args: Prisma.SelectSubset<T, GroupUpdateArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Groups.
   * @param {GroupDeleteManyArgs} args - Arguments to filter Groups to delete.
   * @example
   * // Delete a few Groups
   * const { count } = await prisma.group.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends GroupDeleteManyArgs>(args?: Prisma.SelectSubset<T, GroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GroupUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Groups
   * const group = await prisma.group.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends GroupUpdateManyArgs>(args: Prisma.SelectSubset<T, GroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Groups and returns the data updated in the database.
   * @param {GroupUpdateManyAndReturnArgs} args - Arguments to update many Groups.
   * @example
   * // Update many Groups
   * const group = await prisma.group.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Groups and only return the `id`
   * const groupWithIdOnly = await prisma.group.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends GroupUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, GroupUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Group.
   * @param {GroupUpsertArgs} args - Arguments to update or create a Group.
   * @example
   * // Update or create a Group
   * const group = await prisma.group.upsert({
   *   create: {
   *     // ... data to create a Group
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Group we want to update
   *   }
   * })
   */
  upsert<T extends GroupUpsertArgs>(args: Prisma.SelectSubset<T, GroupUpsertArgs<ExtArgs>>): Prisma.Prisma__GroupClient<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GroupCountArgs} args - Arguments to filter Groups to count.
   * @example
   * // Count the number of Groups
   * const count = await prisma.group.count({
   *   where: {
   *     // ... the filter for the Groups we want to count
   *   }
   * })
  **/
  count<T extends GroupCountArgs>(
    args?: Prisma.Subset<T, GroupCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], GroupCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Group.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends GroupAggregateArgs>(args: Prisma.Subset<T, GroupAggregateArgs>): Prisma.PrismaPromise<GetGroupAggregateType<T>>

  /**
   * Group by Group.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GroupGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends GroupGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: GroupGroupByArgs['orderBy'] }
      : { orderBy?: GroupGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, GroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Group model
 */
readonly fields: GroupFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Group.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__GroupClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Users<T extends Prisma.Group$UsersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Group$UsersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Tasks<T extends Prisma.Group$TasksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Group$TasksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Todos<T extends Prisma.Group$TodosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Group$TodosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Posts<T extends Prisma.Group$PostsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Group$PostsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Files<T extends Prisma.Group$FilesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Group$FilesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  org<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Group model
 */
export interface GroupFieldRefs {
  readonly id: Prisma.FieldRef<"Group", 'Int'>
  readonly createdAt: Prisma.FieldRef<"Group", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Group", 'DateTime'>
  readonly published: Prisma.FieldRef<"Group", 'Boolean'>
  readonly isPublic: Prisma.FieldRef<"Group", 'Boolean'>
  readonly isDeleted: Prisma.FieldRef<"Group", 'Int'>
  readonly isDeletedDT: Prisma.FieldRef<"Group", 'DateTime'>
  readonly orderGroup: Prisma.FieldRef<"Group", 'Int'>
  readonly name: Prisma.FieldRef<"Group", 'String'>
  readonly description: Prisma.FieldRef<"Group", 'String'>
  readonly isActiv: Prisma.FieldRef<"Group", 'DateTime'>
  readonly orgId: Prisma.FieldRef<"Group", 'String'>
}
    

// Custom InputTypes
/**
 * Group findUnique
 */
export type GroupFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * Filter, which Group to fetch.
   */
  where: Prisma.GroupWhereUniqueInput
}

/**
 * Group findUniqueOrThrow
 */
export type GroupFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * Filter, which Group to fetch.
   */
  where: Prisma.GroupWhereUniqueInput
}

/**
 * Group findFirst
 */
export type GroupFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * Filter, which Group to fetch.
   */
  where?: Prisma.GroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Groups to fetch.
   */
  orderBy?: Prisma.GroupOrderByWithRelationInput | Prisma.GroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Groups.
   */
  cursor?: Prisma.GroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Groups.
   */
  distinct?: Prisma.GroupScalarFieldEnum | Prisma.GroupScalarFieldEnum[]
}

/**
 * Group findFirstOrThrow
 */
export type GroupFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * Filter, which Group to fetch.
   */
  where?: Prisma.GroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Groups to fetch.
   */
  orderBy?: Prisma.GroupOrderByWithRelationInput | Prisma.GroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Groups.
   */
  cursor?: Prisma.GroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Groups.
   */
  distinct?: Prisma.GroupScalarFieldEnum | Prisma.GroupScalarFieldEnum[]
}

/**
 * Group findMany
 */
export type GroupFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * Filter, which Groups to fetch.
   */
  where?: Prisma.GroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Groups to fetch.
   */
  orderBy?: Prisma.GroupOrderByWithRelationInput | Prisma.GroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Groups.
   */
  cursor?: Prisma.GroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Groups.
   */
  skip?: number
  distinct?: Prisma.GroupScalarFieldEnum | Prisma.GroupScalarFieldEnum[]
}

/**
 * Group create
 */
export type GroupCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * The data needed to create a Group.
   */
  data: Prisma.XOR<Prisma.GroupCreateInput, Prisma.GroupUncheckedCreateInput>
}

/**
 * Group createMany
 */
export type GroupCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Groups.
   */
  data: Prisma.GroupCreateManyInput | Prisma.GroupCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Group createManyAndReturn
 */
export type GroupCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * The data used to create many Groups.
   */
  data: Prisma.GroupCreateManyInput | Prisma.GroupCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Group update
 */
export type GroupUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * The data needed to update a Group.
   */
  data: Prisma.XOR<Prisma.GroupUpdateInput, Prisma.GroupUncheckedUpdateInput>
  /**
   * Choose, which Group to update.
   */
  where: Prisma.GroupWhereUniqueInput
}

/**
 * Group updateMany
 */
export type GroupUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Groups.
   */
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyInput>
  /**
   * Filter which Groups to update
   */
  where?: Prisma.GroupWhereInput
  /**
   * Limit how many Groups to update.
   */
  limit?: number
}

/**
 * Group updateManyAndReturn
 */
export type GroupUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * The data used to update Groups.
   */
  data: Prisma.XOR<Prisma.GroupUpdateManyMutationInput, Prisma.GroupUncheckedUpdateManyInput>
  /**
   * Filter which Groups to update
   */
  where?: Prisma.GroupWhereInput
  /**
   * Limit how many Groups to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Group upsert
 */
export type GroupUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * The filter to search for the Group to update in case it exists.
   */
  where: Prisma.GroupWhereUniqueInput
  /**
   * In case the Group found by the `where` argument doesn't exist, create a new Group with this data.
   */
  create: Prisma.XOR<Prisma.GroupCreateInput, Prisma.GroupUncheckedCreateInput>
  /**
   * In case the Group was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.GroupUpdateInput, Prisma.GroupUncheckedUpdateInput>
}

/**
 * Group delete
 */
export type GroupDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  /**
   * Filter which Group to delete.
   */
  where: Prisma.GroupWhereUniqueInput
}

/**
 * Group deleteMany
 */
export type GroupDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Groups to delete
   */
  where?: Prisma.GroupWhereInput
  /**
   * Limit how many Groups to delete.
   */
  limit?: number
}

/**
 * Group.Users
 */
export type Group$UsersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  cursor?: Prisma.UserWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * Group.Tasks
 */
export type Group$TasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Task
   */
  select?: Prisma.TaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Task
   */
  omit?: Prisma.TaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskInclude<ExtArgs> | null
  where?: Prisma.TaskWhereInput
  orderBy?: Prisma.TaskOrderByWithRelationInput | Prisma.TaskOrderByWithRelationInput[]
  cursor?: Prisma.TaskWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TaskScalarFieldEnum | Prisma.TaskScalarFieldEnum[]
}

/**
 * Group.Todos
 */
export type Group$TodosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  where?: Prisma.TodoWhereInput
  orderBy?: Prisma.TodoOrderByWithRelationInput | Prisma.TodoOrderByWithRelationInput[]
  cursor?: Prisma.TodoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TodoScalarFieldEnum | Prisma.TodoScalarFieldEnum[]
}

/**
 * Group.Posts
 */
export type Group$PostsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Post
   */
  select?: Prisma.PostSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Post
   */
  omit?: Prisma.PostOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostInclude<ExtArgs> | null
  where?: Prisma.PostWhereInput
  orderBy?: Prisma.PostOrderByWithRelationInput | Prisma.PostOrderByWithRelationInput[]
  cursor?: Prisma.PostWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PostScalarFieldEnum | Prisma.PostScalarFieldEnum[]
}

/**
 * Group.Files
 */
export type Group$FilesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the File
   */
  select?: Prisma.FileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the File
   */
  omit?: Prisma.FileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileInclude<ExtArgs> | null
  where?: Prisma.FileWhereInput
  orderBy?: Prisma.FileOrderByWithRelationInput | Prisma.FileOrderByWithRelationInput[]
  cursor?: Prisma.FileWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FileScalarFieldEnum | Prisma.FileScalarFieldEnum[]
}

/**
 * Group without action
 */
export type GroupDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
}
