
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `AccountValidation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model AccountValidation
 * 
 */
export type AccountValidationModel = runtime.Types.Result.DefaultSelection<Prisma.$AccountValidationPayload>

export type AggregateAccountValidation = {
  _count: AccountValidationCountAggregateOutputType | null
  _avg: AccountValidationAvgAggregateOutputType | null
  _sum: AccountValidationSumAggregateOutputType | null
  _min: AccountValidationMinAggregateOutputType | null
  _max: AccountValidationMaxAggregateOutputType | null
}

export type AccountValidationAvgAggregateOutputType = {
  numSeq: number | null
  isDeleted: number | null
}

export type AccountValidationSumAggregateOutputType = {
  numSeq: number | null
  isDeleted: number | null
}

export type AccountValidationMinAggregateOutputType = {
  id: string | null
  numSeq: number | null
  createdAt: Date | null
  updatedAt: Date | null
  published: boolean | null
  isPublic: boolean | null
  isDeleted: number | null
  isDeletedDT: Date | null
  isValidated: boolean | null
  emailToken: string | null
  timeStamp: Date | null
}

export type AccountValidationMaxAggregateOutputType = {
  id: string | null
  numSeq: number | null
  createdAt: Date | null
  updatedAt: Date | null
  published: boolean | null
  isPublic: boolean | null
  isDeleted: number | null
  isDeletedDT: Date | null
  isValidated: boolean | null
  emailToken: string | null
  timeStamp: Date | null
}

export type AccountValidationCountAggregateOutputType = {
  id: number
  numSeq: number
  createdAt: number
  updatedAt: number
  published: number
  isPublic: number
  isDeleted: number
  isDeletedDT: number
  isValidated: number
  emailToken: number
  timeStamp: number
  _all: number
}


export type AccountValidationAvgAggregateInputType = {
  numSeq?: true
  isDeleted?: true
}

export type AccountValidationSumAggregateInputType = {
  numSeq?: true
  isDeleted?: true
}

export type AccountValidationMinAggregateInputType = {
  id?: true
  numSeq?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isPublic?: true
  isDeleted?: true
  isDeletedDT?: true
  isValidated?: true
  emailToken?: true
  timeStamp?: true
}

export type AccountValidationMaxAggregateInputType = {
  id?: true
  numSeq?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isPublic?: true
  isDeleted?: true
  isDeletedDT?: true
  isValidated?: true
  emailToken?: true
  timeStamp?: true
}

export type AccountValidationCountAggregateInputType = {
  id?: true
  numSeq?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isPublic?: true
  isDeleted?: true
  isDeletedDT?: true
  isValidated?: true
  emailToken?: true
  timeStamp?: true
  _all?: true
}

export type AccountValidationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AccountValidation to aggregate.
   */
  where?: Prisma.AccountValidationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountValidations to fetch.
   */
  orderBy?: Prisma.AccountValidationOrderByWithRelationInput | Prisma.AccountValidationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AccountValidationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountValidations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountValidations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned AccountValidations
  **/
  _count?: true | AccountValidationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: AccountValidationAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: AccountValidationSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AccountValidationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AccountValidationMaxAggregateInputType
}

export type GetAccountValidationAggregateType<T extends AccountValidationAggregateArgs> = {
      [P in keyof T & keyof AggregateAccountValidation]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAccountValidation[P]>
    : Prisma.GetScalarType<T[P], AggregateAccountValidation[P]>
}




export type AccountValidationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AccountValidationWhereInput
  orderBy?: Prisma.AccountValidationOrderByWithAggregationInput | Prisma.AccountValidationOrderByWithAggregationInput[]
  by: Prisma.AccountValidationScalarFieldEnum[] | Prisma.AccountValidationScalarFieldEnum
  having?: Prisma.AccountValidationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AccountValidationCountAggregateInputType | true
  _avg?: AccountValidationAvgAggregateInputType
  _sum?: AccountValidationSumAggregateInputType
  _min?: AccountValidationMinAggregateInputType
  _max?: AccountValidationMaxAggregateInputType
}

export type AccountValidationGroupByOutputType = {
  id: string
  numSeq: number
  createdAt: Date
  updatedAt: Date
  published: boolean | null
  isPublic: boolean | null
  isDeleted: number | null
  isDeletedDT: Date | null
  isValidated: boolean
  emailToken: string
  timeStamp: Date
  _count: AccountValidationCountAggregateOutputType | null
  _avg: AccountValidationAvgAggregateOutputType | null
  _sum: AccountValidationSumAggregateOutputType | null
  _min: AccountValidationMinAggregateOutputType | null
  _max: AccountValidationMaxAggregateOutputType | null
}

type GetAccountValidationGroupByPayload<T extends AccountValidationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AccountValidationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AccountValidationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AccountValidationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AccountValidationGroupByOutputType[P]>
      }
    >
  >



export type AccountValidationWhereInput = {
  AND?: Prisma.AccountValidationWhereInput | Prisma.AccountValidationWhereInput[]
  OR?: Prisma.AccountValidationWhereInput[]
  NOT?: Prisma.AccountValidationWhereInput | Prisma.AccountValidationWhereInput[]
  id?: Prisma.StringFilter<"AccountValidation"> | string
  numSeq?: Prisma.IntFilter<"AccountValidation"> | number
  createdAt?: Prisma.DateTimeFilter<"AccountValidation"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"AccountValidation"> | Date | string
  published?: Prisma.BoolNullableFilter<"AccountValidation"> | boolean | null
  isPublic?: Prisma.BoolNullableFilter<"AccountValidation"> | boolean | null
  isDeleted?: Prisma.IntNullableFilter<"AccountValidation"> | number | null
  isDeletedDT?: Prisma.DateTimeNullableFilter<"AccountValidation"> | Date | string | null
  isValidated?: Prisma.BoolFilter<"AccountValidation"> | boolean
  emailToken?: Prisma.StringFilter<"AccountValidation"> | string
  timeStamp?: Prisma.DateTimeFilter<"AccountValidation"> | Date | string
}

export type AccountValidationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrderInput | Prisma.SortOrder
  isPublic?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeleted?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrderInput | Prisma.SortOrder
  isValidated?: Prisma.SortOrder
  emailToken?: Prisma.SortOrder
  timeStamp?: Prisma.SortOrder
}

export type AccountValidationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  emailToken?: string
  AND?: Prisma.AccountValidationWhereInput | Prisma.AccountValidationWhereInput[]
  OR?: Prisma.AccountValidationWhereInput[]
  NOT?: Prisma.AccountValidationWhereInput | Prisma.AccountValidationWhereInput[]
  numSeq?: Prisma.IntFilter<"AccountValidation"> | number
  createdAt?: Prisma.DateTimeFilter<"AccountValidation"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"AccountValidation"> | Date | string
  published?: Prisma.BoolNullableFilter<"AccountValidation"> | boolean | null
  isPublic?: Prisma.BoolNullableFilter<"AccountValidation"> | boolean | null
  isDeleted?: Prisma.IntNullableFilter<"AccountValidation"> | number | null
  isDeletedDT?: Prisma.DateTimeNullableFilter<"AccountValidation"> | Date | string | null
  isValidated?: Prisma.BoolFilter<"AccountValidation"> | boolean
  timeStamp?: Prisma.DateTimeFilter<"AccountValidation"> | Date | string
}, "id" | "emailToken">

export type AccountValidationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrderInput | Prisma.SortOrder
  isPublic?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeleted?: Prisma.SortOrderInput | Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrderInput | Prisma.SortOrder
  isValidated?: Prisma.SortOrder
  emailToken?: Prisma.SortOrder
  timeStamp?: Prisma.SortOrder
  _count?: Prisma.AccountValidationCountOrderByAggregateInput
  _avg?: Prisma.AccountValidationAvgOrderByAggregateInput
  _max?: Prisma.AccountValidationMaxOrderByAggregateInput
  _min?: Prisma.AccountValidationMinOrderByAggregateInput
  _sum?: Prisma.AccountValidationSumOrderByAggregateInput
}

export type AccountValidationScalarWhereWithAggregatesInput = {
  AND?: Prisma.AccountValidationScalarWhereWithAggregatesInput | Prisma.AccountValidationScalarWhereWithAggregatesInput[]
  OR?: Prisma.AccountValidationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AccountValidationScalarWhereWithAggregatesInput | Prisma.AccountValidationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"AccountValidation"> | string
  numSeq?: Prisma.IntWithAggregatesFilter<"AccountValidation"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"AccountValidation"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"AccountValidation"> | Date | string
  published?: Prisma.BoolNullableWithAggregatesFilter<"AccountValidation"> | boolean | null
  isPublic?: Prisma.BoolNullableWithAggregatesFilter<"AccountValidation"> | boolean | null
  isDeleted?: Prisma.IntNullableWithAggregatesFilter<"AccountValidation"> | number | null
  isDeletedDT?: Prisma.DateTimeNullableWithAggregatesFilter<"AccountValidation"> | Date | string | null
  isValidated?: Prisma.BoolWithAggregatesFilter<"AccountValidation"> | boolean
  emailToken?: Prisma.StringWithAggregatesFilter<"AccountValidation"> | string
  timeStamp?: Prisma.DateTimeWithAggregatesFilter<"AccountValidation"> | Date | string
}

export type AccountValidationCreateInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean | null
  isPublic?: boolean | null
  isDeleted?: number | null
  isDeletedDT?: Date | string | null
  isValidated?: boolean
  emailToken: string
  timeStamp: Date | string
}

export type AccountValidationUncheckedCreateInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean | null
  isPublic?: boolean | null
  isDeleted?: number | null
  isDeletedDT?: Date | string | null
  isValidated?: boolean
  emailToken: string
  timeStamp: Date | string
}

export type AccountValidationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isPublic?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isDeleted?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailToken?: Prisma.StringFieldUpdateOperationsInput | string
  timeStamp?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AccountValidationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isPublic?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isDeleted?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailToken?: Prisma.StringFieldUpdateOperationsInput | string
  timeStamp?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AccountValidationCreateManyInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean | null
  isPublic?: boolean | null
  isDeleted?: number | null
  isDeletedDT?: Date | string | null
  isValidated?: boolean
  emailToken: string
  timeStamp: Date | string
}

export type AccountValidationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isPublic?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isDeleted?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailToken?: Prisma.StringFieldUpdateOperationsInput | string
  timeStamp?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AccountValidationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isPublic?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  isDeleted?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailToken?: Prisma.StringFieldUpdateOperationsInput | string
  timeStamp?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AccountValidationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
  emailToken?: Prisma.SortOrder
  timeStamp?: Prisma.SortOrder
}

export type AccountValidationAvgOrderByAggregateInput = {
  numSeq?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
}

export type AccountValidationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
  emailToken?: Prisma.SortOrder
  timeStamp?: Prisma.SortOrder
}

export type AccountValidationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
  emailToken?: Prisma.SortOrder
  timeStamp?: Prisma.SortOrder
}

export type AccountValidationSumOrderByAggregateInput = {
  numSeq?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
}



export type AccountValidationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isValidated?: boolean
  emailToken?: boolean
  timeStamp?: boolean
}, ExtArgs["result"]["accountValidation"]>

export type AccountValidationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isValidated?: boolean
  emailToken?: boolean
  timeStamp?: boolean
}, ExtArgs["result"]["accountValidation"]>

export type AccountValidationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isValidated?: boolean
  emailToken?: boolean
  timeStamp?: boolean
}, ExtArgs["result"]["accountValidation"]>

export type AccountValidationSelectScalar = {
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isPublic?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isValidated?: boolean
  emailToken?: boolean
  timeStamp?: boolean
}

export type AccountValidationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "numSeq" | "createdAt" | "updatedAt" | "published" | "isPublic" | "isDeleted" | "isDeletedDT" | "isValidated" | "emailToken" | "timeStamp", ExtArgs["result"]["accountValidation"]>

export type $AccountValidationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "AccountValidation"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    numSeq: number
    createdAt: Date
    updatedAt: Date
    published: boolean | null
    isPublic: boolean | null
    isDeleted: number | null
    isDeletedDT: Date | null
    isValidated: boolean
    emailToken: string
    timeStamp: Date
  }, ExtArgs["result"]["accountValidation"]>
  composites: {}
}

export type AccountValidationGetPayload<S extends boolean | null | undefined | AccountValidationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload, S>

export type AccountValidationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AccountValidationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AccountValidationCountAggregateInputType | true
  }

export interface AccountValidationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AccountValidation'], meta: { name: 'AccountValidation' } }
  /**
   * Find zero or one AccountValidation that matches the filter.
   * @param {AccountValidationFindUniqueArgs} args - Arguments to find a AccountValidation
   * @example
   * // Get one AccountValidation
   * const accountValidation = await prisma.accountValidation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AccountValidationFindUniqueArgs>(args: Prisma.SelectSubset<T, AccountValidationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one AccountValidation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AccountValidationFindUniqueOrThrowArgs} args - Arguments to find a AccountValidation
   * @example
   * // Get one AccountValidation
   * const accountValidation = await prisma.accountValidation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AccountValidationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AccountValidationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AccountValidation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountValidationFindFirstArgs} args - Arguments to find a AccountValidation
   * @example
   * // Get one AccountValidation
   * const accountValidation = await prisma.accountValidation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AccountValidationFindFirstArgs>(args?: Prisma.SelectSubset<T, AccountValidationFindFirstArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AccountValidation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountValidationFindFirstOrThrowArgs} args - Arguments to find a AccountValidation
   * @example
   * // Get one AccountValidation
   * const accountValidation = await prisma.accountValidation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AccountValidationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AccountValidationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more AccountValidations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountValidationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AccountValidations
   * const accountValidations = await prisma.accountValidation.findMany()
   * 
   * // Get first 10 AccountValidations
   * const accountValidations = await prisma.accountValidation.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const accountValidationWithIdOnly = await prisma.accountValidation.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AccountValidationFindManyArgs>(args?: Prisma.SelectSubset<T, AccountValidationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a AccountValidation.
   * @param {AccountValidationCreateArgs} args - Arguments to create a AccountValidation.
   * @example
   * // Create one AccountValidation
   * const AccountValidation = await prisma.accountValidation.create({
   *   data: {
   *     // ... data to create a AccountValidation
   *   }
   * })
   * 
   */
  create<T extends AccountValidationCreateArgs>(args: Prisma.SelectSubset<T, AccountValidationCreateArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many AccountValidations.
   * @param {AccountValidationCreateManyArgs} args - Arguments to create many AccountValidations.
   * @example
   * // Create many AccountValidations
   * const accountValidation = await prisma.accountValidation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AccountValidationCreateManyArgs>(args?: Prisma.SelectSubset<T, AccountValidationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many AccountValidations and returns the data saved in the database.
   * @param {AccountValidationCreateManyAndReturnArgs} args - Arguments to create many AccountValidations.
   * @example
   * // Create many AccountValidations
   * const accountValidation = await prisma.accountValidation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many AccountValidations and only return the `id`
   * const accountValidationWithIdOnly = await prisma.accountValidation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AccountValidationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AccountValidationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a AccountValidation.
   * @param {AccountValidationDeleteArgs} args - Arguments to delete one AccountValidation.
   * @example
   * // Delete one AccountValidation
   * const AccountValidation = await prisma.accountValidation.delete({
   *   where: {
   *     // ... filter to delete one AccountValidation
   *   }
   * })
   * 
   */
  delete<T extends AccountValidationDeleteArgs>(args: Prisma.SelectSubset<T, AccountValidationDeleteArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one AccountValidation.
   * @param {AccountValidationUpdateArgs} args - Arguments to update one AccountValidation.
   * @example
   * // Update one AccountValidation
   * const accountValidation = await prisma.accountValidation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AccountValidationUpdateArgs>(args: Prisma.SelectSubset<T, AccountValidationUpdateArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more AccountValidations.
   * @param {AccountValidationDeleteManyArgs} args - Arguments to filter AccountValidations to delete.
   * @example
   * // Delete a few AccountValidations
   * const { count } = await prisma.accountValidation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AccountValidationDeleteManyArgs>(args?: Prisma.SelectSubset<T, AccountValidationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AccountValidations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountValidationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AccountValidations
   * const accountValidation = await prisma.accountValidation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AccountValidationUpdateManyArgs>(args: Prisma.SelectSubset<T, AccountValidationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AccountValidations and returns the data updated in the database.
   * @param {AccountValidationUpdateManyAndReturnArgs} args - Arguments to update many AccountValidations.
   * @example
   * // Update many AccountValidations
   * const accountValidation = await prisma.accountValidation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more AccountValidations and only return the `id`
   * const accountValidationWithIdOnly = await prisma.accountValidation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AccountValidationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AccountValidationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one AccountValidation.
   * @param {AccountValidationUpsertArgs} args - Arguments to update or create a AccountValidation.
   * @example
   * // Update or create a AccountValidation
   * const accountValidation = await prisma.accountValidation.upsert({
   *   create: {
   *     // ... data to create a AccountValidation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AccountValidation we want to update
   *   }
   * })
   */
  upsert<T extends AccountValidationUpsertArgs>(args: Prisma.SelectSubset<T, AccountValidationUpsertArgs<ExtArgs>>): Prisma.Prisma__AccountValidationClient<runtime.Types.Result.GetResult<Prisma.$AccountValidationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of AccountValidations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountValidationCountArgs} args - Arguments to filter AccountValidations to count.
   * @example
   * // Count the number of AccountValidations
   * const count = await prisma.accountValidation.count({
   *   where: {
   *     // ... the filter for the AccountValidations we want to count
   *   }
   * })
  **/
  count<T extends AccountValidationCountArgs>(
    args?: Prisma.Subset<T, AccountValidationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AccountValidationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a AccountValidation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountValidationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AccountValidationAggregateArgs>(args: Prisma.Subset<T, AccountValidationAggregateArgs>): Prisma.PrismaPromise<GetAccountValidationAggregateType<T>>

  /**
   * Group by AccountValidation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AccountValidationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AccountValidationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AccountValidationGroupByArgs['orderBy'] }
      : { orderBy?: AccountValidationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AccountValidationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountValidationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the AccountValidation model
 */
readonly fields: AccountValidationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AccountValidation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AccountValidationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the AccountValidation model
 */
export interface AccountValidationFieldRefs {
  readonly id: Prisma.FieldRef<"AccountValidation", 'String'>
  readonly numSeq: Prisma.FieldRef<"AccountValidation", 'Int'>
  readonly createdAt: Prisma.FieldRef<"AccountValidation", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"AccountValidation", 'DateTime'>
  readonly published: Prisma.FieldRef<"AccountValidation", 'Boolean'>
  readonly isPublic: Prisma.FieldRef<"AccountValidation", 'Boolean'>
  readonly isDeleted: Prisma.FieldRef<"AccountValidation", 'Int'>
  readonly isDeletedDT: Prisma.FieldRef<"AccountValidation", 'DateTime'>
  readonly isValidated: Prisma.FieldRef<"AccountValidation", 'Boolean'>
  readonly emailToken: Prisma.FieldRef<"AccountValidation", 'String'>
  readonly timeStamp: Prisma.FieldRef<"AccountValidation", 'DateTime'>
}
    

// Custom InputTypes
/**
 * AccountValidation findUnique
 */
export type AccountValidationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * Filter, which AccountValidation to fetch.
   */
  where: Prisma.AccountValidationWhereUniqueInput
}

/**
 * AccountValidation findUniqueOrThrow
 */
export type AccountValidationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * Filter, which AccountValidation to fetch.
   */
  where: Prisma.AccountValidationWhereUniqueInput
}

/**
 * AccountValidation findFirst
 */
export type AccountValidationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * Filter, which AccountValidation to fetch.
   */
  where?: Prisma.AccountValidationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountValidations to fetch.
   */
  orderBy?: Prisma.AccountValidationOrderByWithRelationInput | Prisma.AccountValidationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AccountValidations.
   */
  cursor?: Prisma.AccountValidationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountValidations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountValidations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AccountValidations.
   */
  distinct?: Prisma.AccountValidationScalarFieldEnum | Prisma.AccountValidationScalarFieldEnum[]
}

/**
 * AccountValidation findFirstOrThrow
 */
export type AccountValidationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * Filter, which AccountValidation to fetch.
   */
  where?: Prisma.AccountValidationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountValidations to fetch.
   */
  orderBy?: Prisma.AccountValidationOrderByWithRelationInput | Prisma.AccountValidationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AccountValidations.
   */
  cursor?: Prisma.AccountValidationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountValidations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountValidations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AccountValidations.
   */
  distinct?: Prisma.AccountValidationScalarFieldEnum | Prisma.AccountValidationScalarFieldEnum[]
}

/**
 * AccountValidation findMany
 */
export type AccountValidationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * Filter, which AccountValidations to fetch.
   */
  where?: Prisma.AccountValidationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AccountValidations to fetch.
   */
  orderBy?: Prisma.AccountValidationOrderByWithRelationInput | Prisma.AccountValidationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing AccountValidations.
   */
  cursor?: Prisma.AccountValidationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AccountValidations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AccountValidations.
   */
  skip?: number
  distinct?: Prisma.AccountValidationScalarFieldEnum | Prisma.AccountValidationScalarFieldEnum[]
}

/**
 * AccountValidation create
 */
export type AccountValidationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * The data needed to create a AccountValidation.
   */
  data: Prisma.XOR<Prisma.AccountValidationCreateInput, Prisma.AccountValidationUncheckedCreateInput>
}

/**
 * AccountValidation createMany
 */
export type AccountValidationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many AccountValidations.
   */
  data: Prisma.AccountValidationCreateManyInput | Prisma.AccountValidationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * AccountValidation createManyAndReturn
 */
export type AccountValidationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * The data used to create many AccountValidations.
   */
  data: Prisma.AccountValidationCreateManyInput | Prisma.AccountValidationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * AccountValidation update
 */
export type AccountValidationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * The data needed to update a AccountValidation.
   */
  data: Prisma.XOR<Prisma.AccountValidationUpdateInput, Prisma.AccountValidationUncheckedUpdateInput>
  /**
   * Choose, which AccountValidation to update.
   */
  where: Prisma.AccountValidationWhereUniqueInput
}

/**
 * AccountValidation updateMany
 */
export type AccountValidationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update AccountValidations.
   */
  data: Prisma.XOR<Prisma.AccountValidationUpdateManyMutationInput, Prisma.AccountValidationUncheckedUpdateManyInput>
  /**
   * Filter which AccountValidations to update
   */
  where?: Prisma.AccountValidationWhereInput
  /**
   * Limit how many AccountValidations to update.
   */
  limit?: number
}

/**
 * AccountValidation updateManyAndReturn
 */
export type AccountValidationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * The data used to update AccountValidations.
   */
  data: Prisma.XOR<Prisma.AccountValidationUpdateManyMutationInput, Prisma.AccountValidationUncheckedUpdateManyInput>
  /**
   * Filter which AccountValidations to update
   */
  where?: Prisma.AccountValidationWhereInput
  /**
   * Limit how many AccountValidations to update.
   */
  limit?: number
}

/**
 * AccountValidation upsert
 */
export type AccountValidationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * The filter to search for the AccountValidation to update in case it exists.
   */
  where: Prisma.AccountValidationWhereUniqueInput
  /**
   * In case the AccountValidation found by the `where` argument doesn't exist, create a new AccountValidation with this data.
   */
  create: Prisma.XOR<Prisma.AccountValidationCreateInput, Prisma.AccountValidationUncheckedCreateInput>
  /**
   * In case the AccountValidation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AccountValidationUpdateInput, Prisma.AccountValidationUncheckedUpdateInput>
}

/**
 * AccountValidation delete
 */
export type AccountValidationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
  /**
   * Filter which AccountValidation to delete.
   */
  where: Prisma.AccountValidationWhereUniqueInput
}

/**
 * AccountValidation deleteMany
 */
export type AccountValidationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AccountValidations to delete
   */
  where?: Prisma.AccountValidationWhereInput
  /**
   * Limit how many AccountValidations to delete.
   */
  limit?: number
}

/**
 * AccountValidation without action
 */
export type AccountValidationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountValidation
   */
  select?: Prisma.AccountValidationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountValidation
   */
  omit?: Prisma.AccountValidationOmit<ExtArgs> | null
}
