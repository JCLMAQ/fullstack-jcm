
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Todo` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Todo
 * 
 */
export type TodoModel = runtime.Types.Result.DefaultSelection<Prisma.$TodoPayload>

export type AggregateTodo = {
  _count: TodoCountAggregateOutputType | null
  _avg: TodoAvgAggregateOutputType | null
  _sum: TodoSumAggregateOutputType | null
  _min: TodoMinAggregateOutputType | null
  _max: TodoMaxAggregateOutputType | null
}

export type TodoAvgAggregateOutputType = {
  numSeq: number | null
  isDeleted: number | null
  orderTodo: number | null
}

export type TodoSumAggregateOutputType = {
  numSeq: number | null
  isDeleted: number | null
  orderTodo: number | null
}

export type TodoMinAggregateOutputType = {
  id: string | null
  numSeq: number | null
  createdAt: Date | null
  updatedAt: Date | null
  published: boolean | null
  isDeleted: number | null
  isDeletedDT: Date | null
  isPublic: boolean | null
  ownerId: string | null
  orgId: string | null
  orderTodo: number | null
  title: string | null
  content: string | null
  todoState: $Enums.TodoState | null
  mainTodoId: string | null
}

export type TodoMaxAggregateOutputType = {
  id: string | null
  numSeq: number | null
  createdAt: Date | null
  updatedAt: Date | null
  published: boolean | null
  isDeleted: number | null
  isDeletedDT: Date | null
  isPublic: boolean | null
  ownerId: string | null
  orgId: string | null
  orderTodo: number | null
  title: string | null
  content: string | null
  todoState: $Enums.TodoState | null
  mainTodoId: string | null
}

export type TodoCountAggregateOutputType = {
  id: number
  numSeq: number
  createdAt: number
  updatedAt: number
  published: number
  isDeleted: number
  isDeletedDT: number
  isPublic: number
  ownerId: number
  orgId: number
  orderTodo: number
  title: number
  content: number
  todoState: number
  mainTodoId: number
  _all: number
}


export type TodoAvgAggregateInputType = {
  numSeq?: true
  isDeleted?: true
  orderTodo?: true
}

export type TodoSumAggregateInputType = {
  numSeq?: true
  isDeleted?: true
  orderTodo?: true
}

export type TodoMinAggregateInputType = {
  id?: true
  numSeq?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isDeleted?: true
  isDeletedDT?: true
  isPublic?: true
  ownerId?: true
  orgId?: true
  orderTodo?: true
  title?: true
  content?: true
  todoState?: true
  mainTodoId?: true
}

export type TodoMaxAggregateInputType = {
  id?: true
  numSeq?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isDeleted?: true
  isDeletedDT?: true
  isPublic?: true
  ownerId?: true
  orgId?: true
  orderTodo?: true
  title?: true
  content?: true
  todoState?: true
  mainTodoId?: true
}

export type TodoCountAggregateInputType = {
  id?: true
  numSeq?: true
  createdAt?: true
  updatedAt?: true
  published?: true
  isDeleted?: true
  isDeletedDT?: true
  isPublic?: true
  ownerId?: true
  orgId?: true
  orderTodo?: true
  title?: true
  content?: true
  todoState?: true
  mainTodoId?: true
  _all?: true
}

export type TodoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Todo to aggregate.
   */
  where?: Prisma.TodoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Todos to fetch.
   */
  orderBy?: Prisma.TodoOrderByWithRelationInput | Prisma.TodoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TodoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Todos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Todos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Todos
  **/
  _count?: true | TodoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TodoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TodoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TodoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TodoMaxAggregateInputType
}

export type GetTodoAggregateType<T extends TodoAggregateArgs> = {
      [P in keyof T & keyof AggregateTodo]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTodo[P]>
    : Prisma.GetScalarType<T[P], AggregateTodo[P]>
}




export type TodoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TodoWhereInput
  orderBy?: Prisma.TodoOrderByWithAggregationInput | Prisma.TodoOrderByWithAggregationInput[]
  by: Prisma.TodoScalarFieldEnum[] | Prisma.TodoScalarFieldEnum
  having?: Prisma.TodoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TodoCountAggregateInputType | true
  _avg?: TodoAvgAggregateInputType
  _sum?: TodoSumAggregateInputType
  _min?: TodoMinAggregateInputType
  _max?: TodoMaxAggregateInputType
}

export type TodoGroupByOutputType = {
  id: string
  numSeq: number
  createdAt: Date
  updatedAt: Date
  published: boolean
  isDeleted: number
  isDeletedDT: Date | null
  isPublic: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content: string | null
  todoState: $Enums.TodoState
  mainTodoId: string | null
  _count: TodoCountAggregateOutputType | null
  _avg: TodoAvgAggregateOutputType | null
  _sum: TodoSumAggregateOutputType | null
  _min: TodoMinAggregateOutputType | null
  _max: TodoMaxAggregateOutputType | null
}

type GetTodoGroupByPayload<T extends TodoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TodoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TodoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TodoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TodoGroupByOutputType[P]>
      }
    >
  >



export type TodoWhereInput = {
  AND?: Prisma.TodoWhereInput | Prisma.TodoWhereInput[]
  OR?: Prisma.TodoWhereInput[]
  NOT?: Prisma.TodoWhereInput | Prisma.TodoWhereInput[]
  id?: Prisma.StringFilter<"Todo"> | string
  numSeq?: Prisma.IntFilter<"Todo"> | number
  createdAt?: Prisma.DateTimeFilter<"Todo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Todo"> | Date | string
  published?: Prisma.BoolFilter<"Todo"> | boolean
  isDeleted?: Prisma.IntFilter<"Todo"> | number
  isDeletedDT?: Prisma.DateTimeNullableFilter<"Todo"> | Date | string | null
  isPublic?: Prisma.BoolFilter<"Todo"> | boolean
  ownerId?: Prisma.StringFilter<"Todo"> | string
  orgId?: Prisma.StringFilter<"Todo"> | string
  orderTodo?: Prisma.IntFilter<"Todo"> | number
  title?: Prisma.StringFilter<"Todo"> | string
  content?: Prisma.StringNullableFilter<"Todo"> | string | null
  todoState?: Prisma.EnumTodoStateFilter<"Todo"> | $Enums.TodoState
  mainTodoId?: Prisma.StringNullableFilter<"Todo"> | string | null
  owner?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  org?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  groups?: Prisma.GroupListRelationFilter
  mainTodo?: Prisma.XOR<Prisma.TodoNullableScalarRelationFilter, Prisma.TodoWhereInput> | null
  SubTodos?: Prisma.TodoListRelationFilter
  Users?: Prisma.UserTodoLinkListRelationFilter
  Tasks?: Prisma.TaskListRelationFilter
}

export type TodoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrderInput | Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
  orderTodo?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  todoState?: Prisma.SortOrder
  mainTodoId?: Prisma.SortOrderInput | Prisma.SortOrder
  owner?: Prisma.UserOrderByWithRelationInput
  org?: Prisma.OrganizationOrderByWithRelationInput
  groups?: Prisma.GroupOrderByRelationAggregateInput
  mainTodo?: Prisma.TodoOrderByWithRelationInput
  SubTodos?: Prisma.TodoOrderByRelationAggregateInput
  Users?: Prisma.UserTodoLinkOrderByRelationAggregateInput
  Tasks?: Prisma.TaskOrderByRelationAggregateInput
}

export type TodoWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.TodoWhereInput | Prisma.TodoWhereInput[]
  OR?: Prisma.TodoWhereInput[]
  NOT?: Prisma.TodoWhereInput | Prisma.TodoWhereInput[]
  numSeq?: Prisma.IntFilter<"Todo"> | number
  createdAt?: Prisma.DateTimeFilter<"Todo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Todo"> | Date | string
  published?: Prisma.BoolFilter<"Todo"> | boolean
  isDeleted?: Prisma.IntFilter<"Todo"> | number
  isDeletedDT?: Prisma.DateTimeNullableFilter<"Todo"> | Date | string | null
  isPublic?: Prisma.BoolFilter<"Todo"> | boolean
  ownerId?: Prisma.StringFilter<"Todo"> | string
  orgId?: Prisma.StringFilter<"Todo"> | string
  orderTodo?: Prisma.IntFilter<"Todo"> | number
  title?: Prisma.StringFilter<"Todo"> | string
  content?: Prisma.StringNullableFilter<"Todo"> | string | null
  todoState?: Prisma.EnumTodoStateFilter<"Todo"> | $Enums.TodoState
  mainTodoId?: Prisma.StringNullableFilter<"Todo"> | string | null
  owner?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  org?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  groups?: Prisma.GroupListRelationFilter
  mainTodo?: Prisma.XOR<Prisma.TodoNullableScalarRelationFilter, Prisma.TodoWhereInput> | null
  SubTodos?: Prisma.TodoListRelationFilter
  Users?: Prisma.UserTodoLinkListRelationFilter
  Tasks?: Prisma.TaskListRelationFilter
}, "id">

export type TodoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrderInput | Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
  orderTodo?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  todoState?: Prisma.SortOrder
  mainTodoId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.TodoCountOrderByAggregateInput
  _avg?: Prisma.TodoAvgOrderByAggregateInput
  _max?: Prisma.TodoMaxOrderByAggregateInput
  _min?: Prisma.TodoMinOrderByAggregateInput
  _sum?: Prisma.TodoSumOrderByAggregateInput
}

export type TodoScalarWhereWithAggregatesInput = {
  AND?: Prisma.TodoScalarWhereWithAggregatesInput | Prisma.TodoScalarWhereWithAggregatesInput[]
  OR?: Prisma.TodoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TodoScalarWhereWithAggregatesInput | Prisma.TodoScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Todo"> | string
  numSeq?: Prisma.IntWithAggregatesFilter<"Todo"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Todo"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Todo"> | Date | string
  published?: Prisma.BoolWithAggregatesFilter<"Todo"> | boolean
  isDeleted?: Prisma.IntWithAggregatesFilter<"Todo"> | number
  isDeletedDT?: Prisma.DateTimeNullableWithAggregatesFilter<"Todo"> | Date | string | null
  isPublic?: Prisma.BoolWithAggregatesFilter<"Todo"> | boolean
  ownerId?: Prisma.StringWithAggregatesFilter<"Todo"> | string
  orgId?: Prisma.StringWithAggregatesFilter<"Todo"> | string
  orderTodo?: Prisma.IntWithAggregatesFilter<"Todo"> | number
  title?: Prisma.StringWithAggregatesFilter<"Todo"> | string
  content?: Prisma.StringNullableWithAggregatesFilter<"Todo"> | string | null
  todoState?: Prisma.EnumTodoStateWithAggregatesFilter<"Todo"> | $Enums.TodoState
  mainTodoId?: Prisma.StringNullableWithAggregatesFilter<"Todo"> | string | null
}

export type TodoCreateInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  owner: Prisma.UserCreateNestedOneWithoutTodosAuthorInput
  org: Prisma.OrganizationCreateNestedOneWithoutTodosInput
  groups?: Prisma.GroupCreateNestedManyWithoutTodosInput
  mainTodo?: Prisma.TodoCreateNestedOneWithoutSubTodosInput
  SubTodos?: Prisma.TodoCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
  groups?: Prisma.GroupUncheckedCreateNestedManyWithoutTodosInput
  SubTodos?: Prisma.TodoUncheckedCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkUncheckedCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  owner?: Prisma.UserUpdateOneRequiredWithoutTodosAuthorNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutTodosNestedInput
  groups?: Prisma.GroupUpdateManyWithoutTodosNestedInput
  mainTodo?: Prisma.TodoUpdateOneWithoutSubTodosNestedInput
  SubTodos?: Prisma.TodoUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  groups?: Prisma.GroupUncheckedUpdateManyWithoutTodosNestedInput
  SubTodos?: Prisma.TodoUncheckedUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUncheckedUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoCreateManyInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
}

export type TodoUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
}

export type TodoUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TodoListRelationFilter = {
  every?: Prisma.TodoWhereInput
  some?: Prisma.TodoWhereInput
  none?: Prisma.TodoWhereInput
}

export type TodoOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TodoNullableScalarRelationFilter = {
  is?: Prisma.TodoWhereInput | null
  isNot?: Prisma.TodoWhereInput | null
}

export type TodoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
  orderTodo?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  todoState?: Prisma.SortOrder
  mainTodoId?: Prisma.SortOrder
}

export type TodoAvgOrderByAggregateInput = {
  numSeq?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  orderTodo?: Prisma.SortOrder
}

export type TodoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
  orderTodo?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  todoState?: Prisma.SortOrder
  mainTodoId?: Prisma.SortOrder
}

export type TodoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  numSeq?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  published?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  isDeletedDT?: Prisma.SortOrder
  isPublic?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  orgId?: Prisma.SortOrder
  orderTodo?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  todoState?: Prisma.SortOrder
  mainTodoId?: Prisma.SortOrder
}

export type TodoSumOrderByAggregateInput = {
  numSeq?: Prisma.SortOrder
  isDeleted?: Prisma.SortOrder
  orderTodo?: Prisma.SortOrder
}

export type TodoScalarRelationFilter = {
  is?: Prisma.TodoWhereInput
  isNot?: Prisma.TodoWhereInput
}

export type TodoCreateNestedManyWithoutOrgInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOrgInput, Prisma.TodoUncheckedCreateWithoutOrgInput> | Prisma.TodoCreateWithoutOrgInput[] | Prisma.TodoUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOrgInput | Prisma.TodoCreateOrConnectWithoutOrgInput[]
  createMany?: Prisma.TodoCreateManyOrgInputEnvelope
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type TodoUncheckedCreateNestedManyWithoutOrgInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOrgInput, Prisma.TodoUncheckedCreateWithoutOrgInput> | Prisma.TodoCreateWithoutOrgInput[] | Prisma.TodoUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOrgInput | Prisma.TodoCreateOrConnectWithoutOrgInput[]
  createMany?: Prisma.TodoCreateManyOrgInputEnvelope
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type TodoUpdateManyWithoutOrgNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOrgInput, Prisma.TodoUncheckedCreateWithoutOrgInput> | Prisma.TodoCreateWithoutOrgInput[] | Prisma.TodoUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOrgInput | Prisma.TodoCreateOrConnectWithoutOrgInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutOrgInput | Prisma.TodoUpsertWithWhereUniqueWithoutOrgInput[]
  createMany?: Prisma.TodoCreateManyOrgInputEnvelope
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutOrgInput | Prisma.TodoUpdateWithWhereUniqueWithoutOrgInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutOrgInput | Prisma.TodoUpdateManyWithWhereWithoutOrgInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoUncheckedUpdateManyWithoutOrgNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOrgInput, Prisma.TodoUncheckedCreateWithoutOrgInput> | Prisma.TodoCreateWithoutOrgInput[] | Prisma.TodoUncheckedCreateWithoutOrgInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOrgInput | Prisma.TodoCreateOrConnectWithoutOrgInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutOrgInput | Prisma.TodoUpsertWithWhereUniqueWithoutOrgInput[]
  createMany?: Prisma.TodoCreateManyOrgInputEnvelope
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutOrgInput | Prisma.TodoUpdateWithWhereUniqueWithoutOrgInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutOrgInput | Prisma.TodoUpdateManyWithWhereWithoutOrgInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoCreateNestedManyWithoutOwnerInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOwnerInput, Prisma.TodoUncheckedCreateWithoutOwnerInput> | Prisma.TodoCreateWithoutOwnerInput[] | Prisma.TodoUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOwnerInput | Prisma.TodoCreateOrConnectWithoutOwnerInput[]
  createMany?: Prisma.TodoCreateManyOwnerInputEnvelope
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type TodoUncheckedCreateNestedManyWithoutOwnerInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOwnerInput, Prisma.TodoUncheckedCreateWithoutOwnerInput> | Prisma.TodoCreateWithoutOwnerInput[] | Prisma.TodoUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOwnerInput | Prisma.TodoCreateOrConnectWithoutOwnerInput[]
  createMany?: Prisma.TodoCreateManyOwnerInputEnvelope
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type TodoUpdateManyWithoutOwnerNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOwnerInput, Prisma.TodoUncheckedCreateWithoutOwnerInput> | Prisma.TodoCreateWithoutOwnerInput[] | Prisma.TodoUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOwnerInput | Prisma.TodoCreateOrConnectWithoutOwnerInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutOwnerInput | Prisma.TodoUpsertWithWhereUniqueWithoutOwnerInput[]
  createMany?: Prisma.TodoCreateManyOwnerInputEnvelope
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutOwnerInput | Prisma.TodoUpdateWithWhereUniqueWithoutOwnerInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutOwnerInput | Prisma.TodoUpdateManyWithWhereWithoutOwnerInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoUncheckedUpdateManyWithoutOwnerNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutOwnerInput, Prisma.TodoUncheckedCreateWithoutOwnerInput> | Prisma.TodoCreateWithoutOwnerInput[] | Prisma.TodoUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutOwnerInput | Prisma.TodoCreateOrConnectWithoutOwnerInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutOwnerInput | Prisma.TodoUpsertWithWhereUniqueWithoutOwnerInput[]
  createMany?: Prisma.TodoCreateManyOwnerInputEnvelope
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutOwnerInput | Prisma.TodoUpdateWithWhereUniqueWithoutOwnerInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutOwnerInput | Prisma.TodoUpdateManyWithWhereWithoutOwnerInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoCreateNestedManyWithoutGroupsInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutGroupsInput, Prisma.TodoUncheckedCreateWithoutGroupsInput> | Prisma.TodoCreateWithoutGroupsInput[] | Prisma.TodoUncheckedCreateWithoutGroupsInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutGroupsInput | Prisma.TodoCreateOrConnectWithoutGroupsInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type TodoUncheckedCreateNestedManyWithoutGroupsInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutGroupsInput, Prisma.TodoUncheckedCreateWithoutGroupsInput> | Prisma.TodoCreateWithoutGroupsInput[] | Prisma.TodoUncheckedCreateWithoutGroupsInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutGroupsInput | Prisma.TodoCreateOrConnectWithoutGroupsInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type TodoUpdateManyWithoutGroupsNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutGroupsInput, Prisma.TodoUncheckedCreateWithoutGroupsInput> | Prisma.TodoCreateWithoutGroupsInput[] | Prisma.TodoUncheckedCreateWithoutGroupsInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutGroupsInput | Prisma.TodoCreateOrConnectWithoutGroupsInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutGroupsInput | Prisma.TodoUpsertWithWhereUniqueWithoutGroupsInput[]
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutGroupsInput | Prisma.TodoUpdateWithWhereUniqueWithoutGroupsInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutGroupsInput | Prisma.TodoUpdateManyWithWhereWithoutGroupsInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoUncheckedUpdateManyWithoutGroupsNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutGroupsInput, Prisma.TodoUncheckedCreateWithoutGroupsInput> | Prisma.TodoCreateWithoutGroupsInput[] | Prisma.TodoUncheckedCreateWithoutGroupsInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutGroupsInput | Prisma.TodoCreateOrConnectWithoutGroupsInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutGroupsInput | Prisma.TodoUpsertWithWhereUniqueWithoutGroupsInput[]
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutGroupsInput | Prisma.TodoUpdateWithWhereUniqueWithoutGroupsInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutGroupsInput | Prisma.TodoUpdateManyWithWhereWithoutGroupsInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoCreateNestedOneWithoutSubTodosInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutSubTodosInput, Prisma.TodoUncheckedCreateWithoutSubTodosInput>
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutSubTodosInput
  connect?: Prisma.TodoWhereUniqueInput
}

export type TodoCreateNestedManyWithoutMainTodoInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutMainTodoInput, Prisma.TodoUncheckedCreateWithoutMainTodoInput> | Prisma.TodoCreateWithoutMainTodoInput[] | Prisma.TodoUncheckedCreateWithoutMainTodoInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutMainTodoInput | Prisma.TodoCreateOrConnectWithoutMainTodoInput[]
  createMany?: Prisma.TodoCreateManyMainTodoInputEnvelope
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type TodoUncheckedCreateNestedManyWithoutMainTodoInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutMainTodoInput, Prisma.TodoUncheckedCreateWithoutMainTodoInput> | Prisma.TodoCreateWithoutMainTodoInput[] | Prisma.TodoUncheckedCreateWithoutMainTodoInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutMainTodoInput | Prisma.TodoCreateOrConnectWithoutMainTodoInput[]
  createMany?: Prisma.TodoCreateManyMainTodoInputEnvelope
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
}

export type EnumTodoStateFieldUpdateOperationsInput = {
  set?: $Enums.TodoState
}

export type TodoUpdateOneWithoutSubTodosNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutSubTodosInput, Prisma.TodoUncheckedCreateWithoutSubTodosInput>
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutSubTodosInput
  upsert?: Prisma.TodoUpsertWithoutSubTodosInput
  disconnect?: Prisma.TodoWhereInput | boolean
  delete?: Prisma.TodoWhereInput | boolean
  connect?: Prisma.TodoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TodoUpdateToOneWithWhereWithoutSubTodosInput, Prisma.TodoUpdateWithoutSubTodosInput>, Prisma.TodoUncheckedUpdateWithoutSubTodosInput>
}

export type TodoUpdateManyWithoutMainTodoNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutMainTodoInput, Prisma.TodoUncheckedCreateWithoutMainTodoInput> | Prisma.TodoCreateWithoutMainTodoInput[] | Prisma.TodoUncheckedCreateWithoutMainTodoInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutMainTodoInput | Prisma.TodoCreateOrConnectWithoutMainTodoInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutMainTodoInput | Prisma.TodoUpsertWithWhereUniqueWithoutMainTodoInput[]
  createMany?: Prisma.TodoCreateManyMainTodoInputEnvelope
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutMainTodoInput | Prisma.TodoUpdateWithWhereUniqueWithoutMainTodoInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutMainTodoInput | Prisma.TodoUpdateManyWithWhereWithoutMainTodoInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoUncheckedUpdateManyWithoutMainTodoNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutMainTodoInput, Prisma.TodoUncheckedCreateWithoutMainTodoInput> | Prisma.TodoCreateWithoutMainTodoInput[] | Prisma.TodoUncheckedCreateWithoutMainTodoInput[]
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutMainTodoInput | Prisma.TodoCreateOrConnectWithoutMainTodoInput[]
  upsert?: Prisma.TodoUpsertWithWhereUniqueWithoutMainTodoInput | Prisma.TodoUpsertWithWhereUniqueWithoutMainTodoInput[]
  createMany?: Prisma.TodoCreateManyMainTodoInputEnvelope
  set?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  disconnect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  delete?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  connect?: Prisma.TodoWhereUniqueInput | Prisma.TodoWhereUniqueInput[]
  update?: Prisma.TodoUpdateWithWhereUniqueWithoutMainTodoInput | Prisma.TodoUpdateWithWhereUniqueWithoutMainTodoInput[]
  updateMany?: Prisma.TodoUpdateManyWithWhereWithoutMainTodoInput | Prisma.TodoUpdateManyWithWhereWithoutMainTodoInput[]
  deleteMany?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
}

export type TodoCreateNestedOneWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutUsersInput, Prisma.TodoUncheckedCreateWithoutUsersInput>
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutUsersInput
  connect?: Prisma.TodoWhereUniqueInput
}

export type TodoUpdateOneRequiredWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutUsersInput, Prisma.TodoUncheckedCreateWithoutUsersInput>
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutUsersInput
  upsert?: Prisma.TodoUpsertWithoutUsersInput
  connect?: Prisma.TodoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TodoUpdateToOneWithWhereWithoutUsersInput, Prisma.TodoUpdateWithoutUsersInput>, Prisma.TodoUncheckedUpdateWithoutUsersInput>
}

export type TodoCreateNestedOneWithoutTasksInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutTasksInput, Prisma.TodoUncheckedCreateWithoutTasksInput>
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutTasksInput
  connect?: Prisma.TodoWhereUniqueInput
}

export type TodoUpdateOneWithoutTasksNestedInput = {
  create?: Prisma.XOR<Prisma.TodoCreateWithoutTasksInput, Prisma.TodoUncheckedCreateWithoutTasksInput>
  connectOrCreate?: Prisma.TodoCreateOrConnectWithoutTasksInput
  upsert?: Prisma.TodoUpsertWithoutTasksInput
  disconnect?: Prisma.TodoWhereInput | boolean
  delete?: Prisma.TodoWhereInput | boolean
  connect?: Prisma.TodoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TodoUpdateToOneWithWhereWithoutTasksInput, Prisma.TodoUpdateWithoutTasksInput>, Prisma.TodoUncheckedUpdateWithoutTasksInput>
}

export type TodoCreateWithoutOrgInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  owner: Prisma.UserCreateNestedOneWithoutTodosAuthorInput
  groups?: Prisma.GroupCreateNestedManyWithoutTodosInput
  mainTodo?: Prisma.TodoCreateNestedOneWithoutSubTodosInput
  SubTodos?: Prisma.TodoCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateWithoutOrgInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
  groups?: Prisma.GroupUncheckedCreateNestedManyWithoutTodosInput
  SubTodos?: Prisma.TodoUncheckedCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkUncheckedCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoCreateOrConnectWithoutOrgInput = {
  where: Prisma.TodoWhereUniqueInput
  create: Prisma.XOR<Prisma.TodoCreateWithoutOrgInput, Prisma.TodoUncheckedCreateWithoutOrgInput>
}

export type TodoCreateManyOrgInputEnvelope = {
  data: Prisma.TodoCreateManyOrgInput | Prisma.TodoCreateManyOrgInput[]
  skipDuplicates?: boolean
}

export type TodoUpsertWithWhereUniqueWithoutOrgInput = {
  where: Prisma.TodoWhereUniqueInput
  update: Prisma.XOR<Prisma.TodoUpdateWithoutOrgInput, Prisma.TodoUncheckedUpdateWithoutOrgInput>
  create: Prisma.XOR<Prisma.TodoCreateWithoutOrgInput, Prisma.TodoUncheckedCreateWithoutOrgInput>
}

export type TodoUpdateWithWhereUniqueWithoutOrgInput = {
  where: Prisma.TodoWhereUniqueInput
  data: Prisma.XOR<Prisma.TodoUpdateWithoutOrgInput, Prisma.TodoUncheckedUpdateWithoutOrgInput>
}

export type TodoUpdateManyWithWhereWithoutOrgInput = {
  where: Prisma.TodoScalarWhereInput
  data: Prisma.XOR<Prisma.TodoUpdateManyMutationInput, Prisma.TodoUncheckedUpdateManyWithoutOrgInput>
}

export type TodoScalarWhereInput = {
  AND?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
  OR?: Prisma.TodoScalarWhereInput[]
  NOT?: Prisma.TodoScalarWhereInput | Prisma.TodoScalarWhereInput[]
  id?: Prisma.StringFilter<"Todo"> | string
  numSeq?: Prisma.IntFilter<"Todo"> | number
  createdAt?: Prisma.DateTimeFilter<"Todo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Todo"> | Date | string
  published?: Prisma.BoolFilter<"Todo"> | boolean
  isDeleted?: Prisma.IntFilter<"Todo"> | number
  isDeletedDT?: Prisma.DateTimeNullableFilter<"Todo"> | Date | string | null
  isPublic?: Prisma.BoolFilter<"Todo"> | boolean
  ownerId?: Prisma.StringFilter<"Todo"> | string
  orgId?: Prisma.StringFilter<"Todo"> | string
  orderTodo?: Prisma.IntFilter<"Todo"> | number
  title?: Prisma.StringFilter<"Todo"> | string
  content?: Prisma.StringNullableFilter<"Todo"> | string | null
  todoState?: Prisma.EnumTodoStateFilter<"Todo"> | $Enums.TodoState
  mainTodoId?: Prisma.StringNullableFilter<"Todo"> | string | null
}

export type TodoCreateWithoutOwnerInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  org: Prisma.OrganizationCreateNestedOneWithoutTodosInput
  groups?: Prisma.GroupCreateNestedManyWithoutTodosInput
  mainTodo?: Prisma.TodoCreateNestedOneWithoutSubTodosInput
  SubTodos?: Prisma.TodoCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateWithoutOwnerInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
  groups?: Prisma.GroupUncheckedCreateNestedManyWithoutTodosInput
  SubTodos?: Prisma.TodoUncheckedCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkUncheckedCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoCreateOrConnectWithoutOwnerInput = {
  where: Prisma.TodoWhereUniqueInput
  create: Prisma.XOR<Prisma.TodoCreateWithoutOwnerInput, Prisma.TodoUncheckedCreateWithoutOwnerInput>
}

export type TodoCreateManyOwnerInputEnvelope = {
  data: Prisma.TodoCreateManyOwnerInput | Prisma.TodoCreateManyOwnerInput[]
  skipDuplicates?: boolean
}

export type TodoUpsertWithWhereUniqueWithoutOwnerInput = {
  where: Prisma.TodoWhereUniqueInput
  update: Prisma.XOR<Prisma.TodoUpdateWithoutOwnerInput, Prisma.TodoUncheckedUpdateWithoutOwnerInput>
  create: Prisma.XOR<Prisma.TodoCreateWithoutOwnerInput, Prisma.TodoUncheckedCreateWithoutOwnerInput>
}

export type TodoUpdateWithWhereUniqueWithoutOwnerInput = {
  where: Prisma.TodoWhereUniqueInput
  data: Prisma.XOR<Prisma.TodoUpdateWithoutOwnerInput, Prisma.TodoUncheckedUpdateWithoutOwnerInput>
}

export type TodoUpdateManyWithWhereWithoutOwnerInput = {
  where: Prisma.TodoScalarWhereInput
  data: Prisma.XOR<Prisma.TodoUpdateManyMutationInput, Prisma.TodoUncheckedUpdateManyWithoutOwnerInput>
}

export type TodoCreateWithoutGroupsInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  owner: Prisma.UserCreateNestedOneWithoutTodosAuthorInput
  org: Prisma.OrganizationCreateNestedOneWithoutTodosInput
  mainTodo?: Prisma.TodoCreateNestedOneWithoutSubTodosInput
  SubTodos?: Prisma.TodoCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateWithoutGroupsInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
  SubTodos?: Prisma.TodoUncheckedCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkUncheckedCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoCreateOrConnectWithoutGroupsInput = {
  where: Prisma.TodoWhereUniqueInput
  create: Prisma.XOR<Prisma.TodoCreateWithoutGroupsInput, Prisma.TodoUncheckedCreateWithoutGroupsInput>
}

export type TodoUpsertWithWhereUniqueWithoutGroupsInput = {
  where: Prisma.TodoWhereUniqueInput
  update: Prisma.XOR<Prisma.TodoUpdateWithoutGroupsInput, Prisma.TodoUncheckedUpdateWithoutGroupsInput>
  create: Prisma.XOR<Prisma.TodoCreateWithoutGroupsInput, Prisma.TodoUncheckedCreateWithoutGroupsInput>
}

export type TodoUpdateWithWhereUniqueWithoutGroupsInput = {
  where: Prisma.TodoWhereUniqueInput
  data: Prisma.XOR<Prisma.TodoUpdateWithoutGroupsInput, Prisma.TodoUncheckedUpdateWithoutGroupsInput>
}

export type TodoUpdateManyWithWhereWithoutGroupsInput = {
  where: Prisma.TodoScalarWhereInput
  data: Prisma.XOR<Prisma.TodoUpdateManyMutationInput, Prisma.TodoUncheckedUpdateManyWithoutGroupsInput>
}

export type TodoCreateWithoutSubTodosInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  owner: Prisma.UserCreateNestedOneWithoutTodosAuthorInput
  org: Prisma.OrganizationCreateNestedOneWithoutTodosInput
  groups?: Prisma.GroupCreateNestedManyWithoutTodosInput
  mainTodo?: Prisma.TodoCreateNestedOneWithoutSubTodosInput
  Users?: Prisma.UserTodoLinkCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateWithoutSubTodosInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
  groups?: Prisma.GroupUncheckedCreateNestedManyWithoutTodosInput
  Users?: Prisma.UserTodoLinkUncheckedCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoCreateOrConnectWithoutSubTodosInput = {
  where: Prisma.TodoWhereUniqueInput
  create: Prisma.XOR<Prisma.TodoCreateWithoutSubTodosInput, Prisma.TodoUncheckedCreateWithoutSubTodosInput>
}

export type TodoCreateWithoutMainTodoInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  owner: Prisma.UserCreateNestedOneWithoutTodosAuthorInput
  org: Prisma.OrganizationCreateNestedOneWithoutTodosInput
  groups?: Prisma.GroupCreateNestedManyWithoutTodosInput
  SubTodos?: Prisma.TodoCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateWithoutMainTodoInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  groups?: Prisma.GroupUncheckedCreateNestedManyWithoutTodosInput
  SubTodos?: Prisma.TodoUncheckedCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkUncheckedCreateNestedManyWithoutTodoInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoCreateOrConnectWithoutMainTodoInput = {
  where: Prisma.TodoWhereUniqueInput
  create: Prisma.XOR<Prisma.TodoCreateWithoutMainTodoInput, Prisma.TodoUncheckedCreateWithoutMainTodoInput>
}

export type TodoCreateManyMainTodoInputEnvelope = {
  data: Prisma.TodoCreateManyMainTodoInput | Prisma.TodoCreateManyMainTodoInput[]
  skipDuplicates?: boolean
}

export type TodoUpsertWithoutSubTodosInput = {
  update: Prisma.XOR<Prisma.TodoUpdateWithoutSubTodosInput, Prisma.TodoUncheckedUpdateWithoutSubTodosInput>
  create: Prisma.XOR<Prisma.TodoCreateWithoutSubTodosInput, Prisma.TodoUncheckedCreateWithoutSubTodosInput>
  where?: Prisma.TodoWhereInput
}

export type TodoUpdateToOneWithWhereWithoutSubTodosInput = {
  where?: Prisma.TodoWhereInput
  data: Prisma.XOR<Prisma.TodoUpdateWithoutSubTodosInput, Prisma.TodoUncheckedUpdateWithoutSubTodosInput>
}

export type TodoUpdateWithoutSubTodosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  owner?: Prisma.UserUpdateOneRequiredWithoutTodosAuthorNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutTodosNestedInput
  groups?: Prisma.GroupUpdateManyWithoutTodosNestedInput
  mainTodo?: Prisma.TodoUpdateOneWithoutSubTodosNestedInput
  Users?: Prisma.UserTodoLinkUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateWithoutSubTodosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  groups?: Prisma.GroupUncheckedUpdateManyWithoutTodosNestedInput
  Users?: Prisma.UserTodoLinkUncheckedUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoUpsertWithWhereUniqueWithoutMainTodoInput = {
  where: Prisma.TodoWhereUniqueInput
  update: Prisma.XOR<Prisma.TodoUpdateWithoutMainTodoInput, Prisma.TodoUncheckedUpdateWithoutMainTodoInput>
  create: Prisma.XOR<Prisma.TodoCreateWithoutMainTodoInput, Prisma.TodoUncheckedCreateWithoutMainTodoInput>
}

export type TodoUpdateWithWhereUniqueWithoutMainTodoInput = {
  where: Prisma.TodoWhereUniqueInput
  data: Prisma.XOR<Prisma.TodoUpdateWithoutMainTodoInput, Prisma.TodoUncheckedUpdateWithoutMainTodoInput>
}

export type TodoUpdateManyWithWhereWithoutMainTodoInput = {
  where: Prisma.TodoScalarWhereInput
  data: Prisma.XOR<Prisma.TodoUpdateManyMutationInput, Prisma.TodoUncheckedUpdateManyWithoutMainTodoInput>
}

export type TodoCreateWithoutUsersInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  owner: Prisma.UserCreateNestedOneWithoutTodosAuthorInput
  org: Prisma.OrganizationCreateNestedOneWithoutTodosInput
  groups?: Prisma.GroupCreateNestedManyWithoutTodosInput
  mainTodo?: Prisma.TodoCreateNestedOneWithoutSubTodosInput
  SubTodos?: Prisma.TodoCreateNestedManyWithoutMainTodoInput
  Tasks?: Prisma.TaskCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateWithoutUsersInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
  groups?: Prisma.GroupUncheckedCreateNestedManyWithoutTodosInput
  SubTodos?: Prisma.TodoUncheckedCreateNestedManyWithoutMainTodoInput
  Tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoCreateOrConnectWithoutUsersInput = {
  where: Prisma.TodoWhereUniqueInput
  create: Prisma.XOR<Prisma.TodoCreateWithoutUsersInput, Prisma.TodoUncheckedCreateWithoutUsersInput>
}

export type TodoUpsertWithoutUsersInput = {
  update: Prisma.XOR<Prisma.TodoUpdateWithoutUsersInput, Prisma.TodoUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.TodoCreateWithoutUsersInput, Prisma.TodoUncheckedCreateWithoutUsersInput>
  where?: Prisma.TodoWhereInput
}

export type TodoUpdateToOneWithWhereWithoutUsersInput = {
  where?: Prisma.TodoWhereInput
  data: Prisma.XOR<Prisma.TodoUpdateWithoutUsersInput, Prisma.TodoUncheckedUpdateWithoutUsersInput>
}

export type TodoUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  owner?: Prisma.UserUpdateOneRequiredWithoutTodosAuthorNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutTodosNestedInput
  groups?: Prisma.GroupUpdateManyWithoutTodosNestedInput
  mainTodo?: Prisma.TodoUpdateOneWithoutSubTodosNestedInput
  SubTodos?: Prisma.TodoUpdateManyWithoutMainTodoNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  groups?: Prisma.GroupUncheckedUpdateManyWithoutTodosNestedInput
  SubTodos?: Prisma.TodoUncheckedUpdateManyWithoutMainTodoNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoCreateWithoutTasksInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  owner: Prisma.UserCreateNestedOneWithoutTodosAuthorInput
  org: Prisma.OrganizationCreateNestedOneWithoutTodosInput
  groups?: Prisma.GroupCreateNestedManyWithoutTodosInput
  mainTodo?: Prisma.TodoCreateNestedOneWithoutSubTodosInput
  SubTodos?: Prisma.TodoCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkCreateNestedManyWithoutTodoInput
}

export type TodoUncheckedCreateWithoutTasksInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
  groups?: Prisma.GroupUncheckedCreateNestedManyWithoutTodosInput
  SubTodos?: Prisma.TodoUncheckedCreateNestedManyWithoutMainTodoInput
  Users?: Prisma.UserTodoLinkUncheckedCreateNestedManyWithoutTodoInput
}

export type TodoCreateOrConnectWithoutTasksInput = {
  where: Prisma.TodoWhereUniqueInput
  create: Prisma.XOR<Prisma.TodoCreateWithoutTasksInput, Prisma.TodoUncheckedCreateWithoutTasksInput>
}

export type TodoUpsertWithoutTasksInput = {
  update: Prisma.XOR<Prisma.TodoUpdateWithoutTasksInput, Prisma.TodoUncheckedUpdateWithoutTasksInput>
  create: Prisma.XOR<Prisma.TodoCreateWithoutTasksInput, Prisma.TodoUncheckedCreateWithoutTasksInput>
  where?: Prisma.TodoWhereInput
}

export type TodoUpdateToOneWithWhereWithoutTasksInput = {
  where?: Prisma.TodoWhereInput
  data: Prisma.XOR<Prisma.TodoUpdateWithoutTasksInput, Prisma.TodoUncheckedUpdateWithoutTasksInput>
}

export type TodoUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  owner?: Prisma.UserUpdateOneRequiredWithoutTodosAuthorNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutTodosNestedInput
  groups?: Prisma.GroupUpdateManyWithoutTodosNestedInput
  mainTodo?: Prisma.TodoUpdateOneWithoutSubTodosNestedInput
  SubTodos?: Prisma.TodoUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  groups?: Prisma.GroupUncheckedUpdateManyWithoutTodosNestedInput
  SubTodos?: Prisma.TodoUncheckedUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoCreateManyOrgInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
}

export type TodoUpdateWithoutOrgInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  owner?: Prisma.UserUpdateOneRequiredWithoutTodosAuthorNestedInput
  groups?: Prisma.GroupUpdateManyWithoutTodosNestedInput
  mainTodo?: Prisma.TodoUpdateOneWithoutSubTodosNestedInput
  SubTodos?: Prisma.TodoUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateWithoutOrgInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  groups?: Prisma.GroupUncheckedUpdateManyWithoutTodosNestedInput
  SubTodos?: Prisma.TodoUncheckedUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUncheckedUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateManyWithoutOrgInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TodoCreateManyOwnerInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
  mainTodoId?: string | null
}

export type TodoUpdateWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  org?: Prisma.OrganizationUpdateOneRequiredWithoutTodosNestedInput
  groups?: Prisma.GroupUpdateManyWithoutTodosNestedInput
  mainTodo?: Prisma.TodoUpdateOneWithoutSubTodosNestedInput
  SubTodos?: Prisma.TodoUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  groups?: Prisma.GroupUncheckedUpdateManyWithoutTodosNestedInput
  SubTodos?: Prisma.TodoUncheckedUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUncheckedUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateManyWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TodoUpdateWithoutGroupsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  owner?: Prisma.UserUpdateOneRequiredWithoutTodosAuthorNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutTodosNestedInput
  mainTodo?: Prisma.TodoUpdateOneWithoutSubTodosNestedInput
  SubTodos?: Prisma.TodoUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateWithoutGroupsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  SubTodos?: Prisma.TodoUncheckedUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUncheckedUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateManyWithoutGroupsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  mainTodoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TodoCreateManyMainTodoInput = {
  id?: string
  numSeq?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  published?: boolean
  isDeleted?: number
  isDeletedDT?: Date | string | null
  isPublic?: boolean
  ownerId: string
  orgId: string
  orderTodo: number
  title: string
  content?: string | null
  todoState?: $Enums.TodoState
}

export type TodoUpdateWithoutMainTodoInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  owner?: Prisma.UserUpdateOneRequiredWithoutTodosAuthorNestedInput
  org?: Prisma.OrganizationUpdateOneRequiredWithoutTodosNestedInput
  groups?: Prisma.GroupUpdateManyWithoutTodosNestedInput
  SubTodos?: Prisma.TodoUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateWithoutMainTodoInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
  groups?: Prisma.GroupUncheckedUpdateManyWithoutTodosNestedInput
  SubTodos?: Prisma.TodoUncheckedUpdateManyWithoutMainTodoNestedInput
  Users?: Prisma.UserTodoLinkUncheckedUpdateManyWithoutTodoNestedInput
  Tasks?: Prisma.TaskUncheckedUpdateManyWithoutTodoNestedInput
}

export type TodoUncheckedUpdateManyWithoutMainTodoInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  numSeq?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  published?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isDeleted?: Prisma.IntFieldUpdateOperationsInput | number
  isDeletedDT?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPublic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  ownerId?: Prisma.StringFieldUpdateOperationsInput | string
  orgId?: Prisma.StringFieldUpdateOperationsInput | string
  orderTodo?: Prisma.IntFieldUpdateOperationsInput | number
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  todoState?: Prisma.EnumTodoStateFieldUpdateOperationsInput | $Enums.TodoState
}


/**
 * Count Type TodoCountOutputType
 */

export type TodoCountOutputType = {
  groups: number
  SubTodos: number
  Users: number
  Tasks: number
}

export type TodoCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  groups?: boolean | TodoCountOutputTypeCountGroupsArgs
  SubTodos?: boolean | TodoCountOutputTypeCountSubTodosArgs
  Users?: boolean | TodoCountOutputTypeCountUsersArgs
  Tasks?: boolean | TodoCountOutputTypeCountTasksArgs
}

/**
 * TodoCountOutputType without action
 */
export type TodoCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TodoCountOutputType
   */
  select?: Prisma.TodoCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TodoCountOutputType without action
 */
export type TodoCountOutputTypeCountGroupsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GroupWhereInput
}

/**
 * TodoCountOutputType without action
 */
export type TodoCountOutputTypeCountSubTodosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TodoWhereInput
}

/**
 * TodoCountOutputType without action
 */
export type TodoCountOutputTypeCountUsersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserTodoLinkWhereInput
}

/**
 * TodoCountOutputType without action
 */
export type TodoCountOutputTypeCountTasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TaskWhereInput
}


export type TodoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isPublic?: boolean
  ownerId?: boolean
  orgId?: boolean
  orderTodo?: boolean
  title?: boolean
  content?: boolean
  todoState?: boolean
  mainTodoId?: boolean
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  groups?: boolean | Prisma.Todo$groupsArgs<ExtArgs>
  mainTodo?: boolean | Prisma.Todo$mainTodoArgs<ExtArgs>
  SubTodos?: boolean | Prisma.Todo$SubTodosArgs<ExtArgs>
  Users?: boolean | Prisma.Todo$UsersArgs<ExtArgs>
  Tasks?: boolean | Prisma.Todo$TasksArgs<ExtArgs>
  _count?: boolean | Prisma.TodoCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["todo"]>

export type TodoSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isPublic?: boolean
  ownerId?: boolean
  orgId?: boolean
  orderTodo?: boolean
  title?: boolean
  content?: boolean
  todoState?: boolean
  mainTodoId?: boolean
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  mainTodo?: boolean | Prisma.Todo$mainTodoArgs<ExtArgs>
}, ExtArgs["result"]["todo"]>

export type TodoSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isPublic?: boolean
  ownerId?: boolean
  orgId?: boolean
  orderTodo?: boolean
  title?: boolean
  content?: boolean
  todoState?: boolean
  mainTodoId?: boolean
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  mainTodo?: boolean | Prisma.Todo$mainTodoArgs<ExtArgs>
}, ExtArgs["result"]["todo"]>

export type TodoSelectScalar = {
  id?: boolean
  numSeq?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  published?: boolean
  isDeleted?: boolean
  isDeletedDT?: boolean
  isPublic?: boolean
  ownerId?: boolean
  orgId?: boolean
  orderTodo?: boolean
  title?: boolean
  content?: boolean
  todoState?: boolean
  mainTodoId?: boolean
}

export type TodoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "numSeq" | "createdAt" | "updatedAt" | "published" | "isDeleted" | "isDeletedDT" | "isPublic" | "ownerId" | "orgId" | "orderTodo" | "title" | "content" | "todoState" | "mainTodoId", ExtArgs["result"]["todo"]>
export type TodoInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  groups?: boolean | Prisma.Todo$groupsArgs<ExtArgs>
  mainTodo?: boolean | Prisma.Todo$mainTodoArgs<ExtArgs>
  SubTodos?: boolean | Prisma.Todo$SubTodosArgs<ExtArgs>
  Users?: boolean | Prisma.Todo$UsersArgs<ExtArgs>
  Tasks?: boolean | Prisma.Todo$TasksArgs<ExtArgs>
  _count?: boolean | Prisma.TodoCountOutputTypeDefaultArgs<ExtArgs>
}
export type TodoIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  mainTodo?: boolean | Prisma.Todo$mainTodoArgs<ExtArgs>
}
export type TodoIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  org?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  mainTodo?: boolean | Prisma.Todo$mainTodoArgs<ExtArgs>
}

export type $TodoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Todo"
  objects: {
    owner: Prisma.$UserPayload<ExtArgs>
    org: Prisma.$OrganizationPayload<ExtArgs>
    groups: Prisma.$GroupPayload<ExtArgs>[]
    mainTodo: Prisma.$TodoPayload<ExtArgs> | null
    SubTodos: Prisma.$TodoPayload<ExtArgs>[]
    Users: Prisma.$UserTodoLinkPayload<ExtArgs>[]
    Tasks: Prisma.$TaskPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    numSeq: number
    createdAt: Date
    updatedAt: Date
    published: boolean
    isDeleted: number
    isDeletedDT: Date | null
    isPublic: boolean
    ownerId: string
    orgId: string
    orderTodo: number
    title: string
    content: string | null
    todoState: $Enums.TodoState
    mainTodoId: string | null
  }, ExtArgs["result"]["todo"]>
  composites: {}
}

export type TodoGetPayload<S extends boolean | null | undefined | TodoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TodoPayload, S>

export type TodoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TodoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TodoCountAggregateInputType | true
  }

export interface TodoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Todo'], meta: { name: 'Todo' } }
  /**
   * Find zero or one Todo that matches the filter.
   * @param {TodoFindUniqueArgs} args - Arguments to find a Todo
   * @example
   * // Get one Todo
   * const todo = await prisma.todo.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TodoFindUniqueArgs>(args: Prisma.SelectSubset<T, TodoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Todo that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TodoFindUniqueOrThrowArgs} args - Arguments to find a Todo
   * @example
   * // Get one Todo
   * const todo = await prisma.todo.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TodoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TodoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Todo that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TodoFindFirstArgs} args - Arguments to find a Todo
   * @example
   * // Get one Todo
   * const todo = await prisma.todo.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TodoFindFirstArgs>(args?: Prisma.SelectSubset<T, TodoFindFirstArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Todo that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TodoFindFirstOrThrowArgs} args - Arguments to find a Todo
   * @example
   * // Get one Todo
   * const todo = await prisma.todo.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TodoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TodoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Todos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TodoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Todos
   * const todos = await prisma.todo.findMany()
   * 
   * // Get first 10 Todos
   * const todos = await prisma.todo.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const todoWithIdOnly = await prisma.todo.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TodoFindManyArgs>(args?: Prisma.SelectSubset<T, TodoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Todo.
   * @param {TodoCreateArgs} args - Arguments to create a Todo.
   * @example
   * // Create one Todo
   * const Todo = await prisma.todo.create({
   *   data: {
   *     // ... data to create a Todo
   *   }
   * })
   * 
   */
  create<T extends TodoCreateArgs>(args: Prisma.SelectSubset<T, TodoCreateArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Todos.
   * @param {TodoCreateManyArgs} args - Arguments to create many Todos.
   * @example
   * // Create many Todos
   * const todo = await prisma.todo.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TodoCreateManyArgs>(args?: Prisma.SelectSubset<T, TodoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Todos and returns the data saved in the database.
   * @param {TodoCreateManyAndReturnArgs} args - Arguments to create many Todos.
   * @example
   * // Create many Todos
   * const todo = await prisma.todo.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Todos and only return the `id`
   * const todoWithIdOnly = await prisma.todo.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TodoCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TodoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Todo.
   * @param {TodoDeleteArgs} args - Arguments to delete one Todo.
   * @example
   * // Delete one Todo
   * const Todo = await prisma.todo.delete({
   *   where: {
   *     // ... filter to delete one Todo
   *   }
   * })
   * 
   */
  delete<T extends TodoDeleteArgs>(args: Prisma.SelectSubset<T, TodoDeleteArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Todo.
   * @param {TodoUpdateArgs} args - Arguments to update one Todo.
   * @example
   * // Update one Todo
   * const todo = await prisma.todo.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TodoUpdateArgs>(args: Prisma.SelectSubset<T, TodoUpdateArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Todos.
   * @param {TodoDeleteManyArgs} args - Arguments to filter Todos to delete.
   * @example
   * // Delete a few Todos
   * const { count } = await prisma.todo.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TodoDeleteManyArgs>(args?: Prisma.SelectSubset<T, TodoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Todos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TodoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Todos
   * const todo = await prisma.todo.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TodoUpdateManyArgs>(args: Prisma.SelectSubset<T, TodoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Todos and returns the data updated in the database.
   * @param {TodoUpdateManyAndReturnArgs} args - Arguments to update many Todos.
   * @example
   * // Update many Todos
   * const todo = await prisma.todo.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Todos and only return the `id`
   * const todoWithIdOnly = await prisma.todo.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TodoUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TodoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Todo.
   * @param {TodoUpsertArgs} args - Arguments to update or create a Todo.
   * @example
   * // Update or create a Todo
   * const todo = await prisma.todo.upsert({
   *   create: {
   *     // ... data to create a Todo
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Todo we want to update
   *   }
   * })
   */
  upsert<T extends TodoUpsertArgs>(args: Prisma.SelectSubset<T, TodoUpsertArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Todos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TodoCountArgs} args - Arguments to filter Todos to count.
   * @example
   * // Count the number of Todos
   * const count = await prisma.todo.count({
   *   where: {
   *     // ... the filter for the Todos we want to count
   *   }
   * })
  **/
  count<T extends TodoCountArgs>(
    args?: Prisma.Subset<T, TodoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TodoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Todo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TodoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TodoAggregateArgs>(args: Prisma.Subset<T, TodoAggregateArgs>): Prisma.PrismaPromise<GetTodoAggregateType<T>>

  /**
   * Group by Todo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TodoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TodoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TodoGroupByArgs['orderBy'] }
      : { orderBy?: TodoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TodoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTodoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Todo model
 */
readonly fields: TodoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Todo.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TodoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  owner<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  org<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  groups<T extends Prisma.Todo$groupsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Todo$groupsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  mainTodo<T extends Prisma.Todo$mainTodoArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Todo$mainTodoArgs<ExtArgs>>): Prisma.Prisma__TodoClient<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  SubTodos<T extends Prisma.Todo$SubTodosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Todo$SubTodosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Users<T extends Prisma.Todo$UsersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Todo$UsersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserTodoLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Tasks<T extends Prisma.Todo$TasksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Todo$TasksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Todo model
 */
export interface TodoFieldRefs {
  readonly id: Prisma.FieldRef<"Todo", 'String'>
  readonly numSeq: Prisma.FieldRef<"Todo", 'Int'>
  readonly createdAt: Prisma.FieldRef<"Todo", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Todo", 'DateTime'>
  readonly published: Prisma.FieldRef<"Todo", 'Boolean'>
  readonly isDeleted: Prisma.FieldRef<"Todo", 'Int'>
  readonly isDeletedDT: Prisma.FieldRef<"Todo", 'DateTime'>
  readonly isPublic: Prisma.FieldRef<"Todo", 'Boolean'>
  readonly ownerId: Prisma.FieldRef<"Todo", 'String'>
  readonly orgId: Prisma.FieldRef<"Todo", 'String'>
  readonly orderTodo: Prisma.FieldRef<"Todo", 'Int'>
  readonly title: Prisma.FieldRef<"Todo", 'String'>
  readonly content: Prisma.FieldRef<"Todo", 'String'>
  readonly todoState: Prisma.FieldRef<"Todo", 'TodoState'>
  readonly mainTodoId: Prisma.FieldRef<"Todo", 'String'>
}
    

// Custom InputTypes
/**
 * Todo findUnique
 */
export type TodoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * Filter, which Todo to fetch.
   */
  where: Prisma.TodoWhereUniqueInput
}

/**
 * Todo findUniqueOrThrow
 */
export type TodoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * Filter, which Todo to fetch.
   */
  where: Prisma.TodoWhereUniqueInput
}

/**
 * Todo findFirst
 */
export type TodoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * Filter, which Todo to fetch.
   */
  where?: Prisma.TodoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Todos to fetch.
   */
  orderBy?: Prisma.TodoOrderByWithRelationInput | Prisma.TodoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Todos.
   */
  cursor?: Prisma.TodoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Todos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Todos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Todos.
   */
  distinct?: Prisma.TodoScalarFieldEnum | Prisma.TodoScalarFieldEnum[]
}

/**
 * Todo findFirstOrThrow
 */
export type TodoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * Filter, which Todo to fetch.
   */
  where?: Prisma.TodoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Todos to fetch.
   */
  orderBy?: Prisma.TodoOrderByWithRelationInput | Prisma.TodoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Todos.
   */
  cursor?: Prisma.TodoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Todos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Todos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Todos.
   */
  distinct?: Prisma.TodoScalarFieldEnum | Prisma.TodoScalarFieldEnum[]
}

/**
 * Todo findMany
 */
export type TodoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * Filter, which Todos to fetch.
   */
  where?: Prisma.TodoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Todos to fetch.
   */
  orderBy?: Prisma.TodoOrderByWithRelationInput | Prisma.TodoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Todos.
   */
  cursor?: Prisma.TodoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Todos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Todos.
   */
  skip?: number
  distinct?: Prisma.TodoScalarFieldEnum | Prisma.TodoScalarFieldEnum[]
}

/**
 * Todo create
 */
export type TodoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * The data needed to create a Todo.
   */
  data: Prisma.XOR<Prisma.TodoCreateInput, Prisma.TodoUncheckedCreateInput>
}

/**
 * Todo createMany
 */
export type TodoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Todos.
   */
  data: Prisma.TodoCreateManyInput | Prisma.TodoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Todo createManyAndReturn
 */
export type TodoCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * The data used to create many Todos.
   */
  data: Prisma.TodoCreateManyInput | Prisma.TodoCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Todo update
 */
export type TodoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * The data needed to update a Todo.
   */
  data: Prisma.XOR<Prisma.TodoUpdateInput, Prisma.TodoUncheckedUpdateInput>
  /**
   * Choose, which Todo to update.
   */
  where: Prisma.TodoWhereUniqueInput
}

/**
 * Todo updateMany
 */
export type TodoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Todos.
   */
  data: Prisma.XOR<Prisma.TodoUpdateManyMutationInput, Prisma.TodoUncheckedUpdateManyInput>
  /**
   * Filter which Todos to update
   */
  where?: Prisma.TodoWhereInput
  /**
   * Limit how many Todos to update.
   */
  limit?: number
}

/**
 * Todo updateManyAndReturn
 */
export type TodoUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * The data used to update Todos.
   */
  data: Prisma.XOR<Prisma.TodoUpdateManyMutationInput, Prisma.TodoUncheckedUpdateManyInput>
  /**
   * Filter which Todos to update
   */
  where?: Prisma.TodoWhereInput
  /**
   * Limit how many Todos to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Todo upsert
 */
export type TodoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * The filter to search for the Todo to update in case it exists.
   */
  where: Prisma.TodoWhereUniqueInput
  /**
   * In case the Todo found by the `where` argument doesn't exist, create a new Todo with this data.
   */
  create: Prisma.XOR<Prisma.TodoCreateInput, Prisma.TodoUncheckedCreateInput>
  /**
   * In case the Todo was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TodoUpdateInput, Prisma.TodoUncheckedUpdateInput>
}

/**
 * Todo delete
 */
export type TodoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  /**
   * Filter which Todo to delete.
   */
  where: Prisma.TodoWhereUniqueInput
}

/**
 * Todo deleteMany
 */
export type TodoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Todos to delete
   */
  where?: Prisma.TodoWhereInput
  /**
   * Limit how many Todos to delete.
   */
  limit?: number
}

/**
 * Todo.groups
 */
export type Todo$groupsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Group
   */
  select?: Prisma.GroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Group
   */
  omit?: Prisma.GroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GroupInclude<ExtArgs> | null
  where?: Prisma.GroupWhereInput
  orderBy?: Prisma.GroupOrderByWithRelationInput | Prisma.GroupOrderByWithRelationInput[]
  cursor?: Prisma.GroupWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GroupScalarFieldEnum | Prisma.GroupScalarFieldEnum[]
}

/**
 * Todo.mainTodo
 */
export type Todo$mainTodoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  where?: Prisma.TodoWhereInput
}

/**
 * Todo.SubTodos
 */
export type Todo$SubTodosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
  where?: Prisma.TodoWhereInput
  orderBy?: Prisma.TodoOrderByWithRelationInput | Prisma.TodoOrderByWithRelationInput[]
  cursor?: Prisma.TodoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TodoScalarFieldEnum | Prisma.TodoScalarFieldEnum[]
}

/**
 * Todo.Users
 */
export type Todo$UsersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserTodoLink
   */
  select?: Prisma.UserTodoLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserTodoLink
   */
  omit?: Prisma.UserTodoLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserTodoLinkInclude<ExtArgs> | null
  where?: Prisma.UserTodoLinkWhereInput
  orderBy?: Prisma.UserTodoLinkOrderByWithRelationInput | Prisma.UserTodoLinkOrderByWithRelationInput[]
  cursor?: Prisma.UserTodoLinkWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UserTodoLinkScalarFieldEnum | Prisma.UserTodoLinkScalarFieldEnum[]
}

/**
 * Todo.Tasks
 */
export type Todo$TasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Task
   */
  select?: Prisma.TaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Task
   */
  omit?: Prisma.TaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskInclude<ExtArgs> | null
  where?: Prisma.TaskWhereInput
  orderBy?: Prisma.TaskOrderByWithRelationInput | Prisma.TaskOrderByWithRelationInput[]
  cursor?: Prisma.TaskWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TaskScalarFieldEnum | Prisma.TaskScalarFieldEnum[]
}

/**
 * Todo without action
 */
export type TodoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Todo
   */
  select?: Prisma.TodoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Todo
   */
  omit?: Prisma.TodoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TodoInclude<ExtArgs> | null
}
